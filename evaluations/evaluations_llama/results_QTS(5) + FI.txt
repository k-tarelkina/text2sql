                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.917                0.700                0.619                0.588                0.690               

=====================   TIME ACCELERATION     =====================
time acceleration    99.443               99.890               101.240              101.145              100.273             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.917                0.640                0.333                0.294                0.550               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                0.854                1.000                0.917                0.908               
select(no AGG)       1.000                0.854                1.000                0.917                0.908               
where                1.000                0.700                0.400                0.417                0.560               
where(no OP)         1.000                0.700                0.533                0.500                0.620               
group(no Having)     0.000                0.789                1.000                1.000                0.810               
group                0.000                0.789                1.000                1.000                0.810               
order                0.000                1.000                1.000                1.000                1.000               
and/or               1.000                1.000                0.857                0.824                0.940               
IUEN                 0.000                0.000                1.000                0.667                0.750               
keywords             1.000                0.867                0.500                0.667                0.763               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.917                0.820                0.762                0.647                0.790               
select(no AGG)       0.917                0.820                0.762                0.647                0.790               
where                0.750                1.000                0.462                0.294                0.583               
where(no OP)         0.750                1.000                0.615                0.353                0.646               
group(no Having)     0.000                0.682                0.500                0.500                0.654               
group                0.000                0.682                0.500                0.500                0.654               
order                0.000                0.600                0.250                0.500                0.500               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.200                0.500                0.333               
keywords             0.750                0.848                0.381                0.471                0.659               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.957                0.837                0.865                0.759                0.845               
select(no AGG)       0.957                0.837                0.865                0.759                0.845               
where                0.857                0.824                0.429                0.345                0.571               
where(no OP)         0.857                0.824                0.571                0.414                0.633               
group(no Having)     1.000                0.732                0.667                0.667                0.723               
group                1.000                0.732                0.667                0.667                0.723               
order                1.000                0.750                0.400                0.667                0.667               
and/or               1.000                1.000                0.923                0.903                0.969               
IUEN                 1.000                1.000                0.333                0.571                0.462               
keywords             0.857                0.857                0.432                0.552                0.707               

medium pred: select t1.name, t1.song_name, t1.song_release_year from singer as t1 where t1.age = (select min(age) from singer)
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:1

'singer_in_concert.country'
easy pred: select distinct t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > 20
easy gold: select distinct country from singer where age > 20

medium pred: select count(*) from singer group by country
medium gold: select country, count(*) from singer group by country

medium pred: select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_release_year from singer as t1 where t1.age = ( select min(age) from singer )
medium gold: select song_name, song_release_year from singer order by age limit 1

medium pred: select max(capacity), avg(capacity) from stadium
medium gold: select max(capacity), average from stadium

eval_err_num:2

'concert.singer_id'
hard pred: select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg(age) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select cast(sum(age) as real) / count(singer_id) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg(age) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select cast(sum(age) as real) / count(singer_id) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg(age) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select cast(sum(age) as real) / count(singer_id) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg(age) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select cast(sum(age) as real) / count(singer_id) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age > (select avg(age) from singer) select t1.song_name from singer as t1 join concert as t2 on t1.singer_id = t2.singer_id where t1.age >
hard gold: select song_name from singer where age > (select avg(age) from singer)

medium pred: select name, count(*) from stadium group by name
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

medium pred: select t1.name, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:3

'('
extra pred: select t1.name, t1.capacity from stadium as t1 join ( select stadium_id, count(*) from concert where year >= 2014 group by stadium_id ) as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:4

'singer_in_concert.year'
hard pred: select t2.year from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t2.year order by count(*) desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

hard pred: select t1.name from stadium as t1 where t1.stadium_id not in ( select t2.stadium_id from concert as t2 where t2.year = '2014' )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

medium pred: select t1.concert_name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

medium pred: select t1.concert_name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_name
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

medium pred: select t1.name, count(t2.concert_id) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

hard pred: select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

hard pred: select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

medium pred: select weight from pets where pet_age = ( select min(pet_age) from pets where pettype = 'dog' )
medium gold: select weight from pets order by pet_age limit 1

medium pred: select weight from pets where pet_age = (select min(pet_age) from pets where pettype = 'dog')
medium gold: select weight from pets order by pet_age limit 1

medium pred: select count(*) from student where age > 20 select count(*) from has_pet where stuid in ( select stuid from student where age > 20 )
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

medium pred: select count(*) from student where age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:5

Error col: stuid
hard pred: select count(*) from pets where pettype = 'dog' and stuid in ( select stuid from student where sex = 'f' )
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

hard pred: select count(*) from student where sex = "f" and major = (select major from student where sex = "m" and fname = "john")
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

extra pred: select fname from student where stuid in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat' or pettype = 'dog'))
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'cat' or pettype = 'dog' )
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select fname from student where stuid in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat') intersect select stuid from has_pet where petid in (select petid from pets where pettype = 'dog'))
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "cat" ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "dog" )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select major, age from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:6

'has_pet.major'
extra pred: select t1.major, t1.age from student as t1 where t1.stuid not in (select t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid where t2.pettype = 'cat')
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

hard pred: select stuid from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat'))
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

hard pred: select stuid from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = "cat"))
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

extra pred: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' and t3.petid not in (select petid from pets where pettype = 'cat')
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

extra pred: select fname from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = "cat"))
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select fname, age from student where stuid in ( select stuid from has_pet )
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

medium pred: select fname, sex from student where stuid in ( select stuid from has_pet group by stuid having count(*) > 1 )
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

hard pred: select lname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pet_age = 3 and pettype = 'cat' ) )
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

hard pred: select lname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pet_age = 3 ) )
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:7

Error col: contid
medium pred: select contid, continent, count(*) from countries group by contid
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:8

Error col: contid
medium pred: select contid, continent, count(*) from countries group by continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

medium pred: select id, fullname, count(*) from car_makers group by id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:9

Error col: horsepower
hard pred: select model from model_list where horsepower = ( select min(horsepower ) from car_names )
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:10

'car_names.horsepower'
hard pred: select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model order by t2.horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:11

Error col: id
extra pred: select model from model_list where id in ( select maker from car_makers where country in ( select country from countries where continent in ( select id from continents where continent = 'asia' ) ) )
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:12

Error col: make
extra pred: select model from model_list where make in ( select make from car_names where weight < ( select avg(weight) from car_names ) )
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:13

Error col: year
extra pred: select distinct maker from car_makers where year in (select year from cars_data where year = 1970)
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

