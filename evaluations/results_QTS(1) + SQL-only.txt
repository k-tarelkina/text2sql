                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.250                0.020                0.000                0.000                0.040               

=====================   TIME ACCELERATION     =====================
time acceleration    99.890               101.405              94.212               0.000                100.101             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.250                0.020                0.000                0.000                0.040               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                1.000                1.000                0.000                1.000               
select(no AGG)       1.000                1.000                1.000                0.000                1.000               
where                1.000                0.000                0.000                0.000                0.667               
where(no OP)         1.000                0.000                0.000                0.000                0.667               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                1.000                0.000                0.000                1.000               
and/or               1.000                0.960                0.800                0.765                0.899               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                1.000                0.000                0.000                0.750               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.250                0.020                0.048                0.000                0.050               
select(no AGG)       0.250                0.020                0.048                0.000                0.050               
where                0.500                0.000                0.000                0.000                0.042               
where(no OP)         0.500                0.000                0.000                0.000                0.042               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.100                0.000                0.000                0.062               
and/or               1.000                1.000                0.941                1.000                0.989               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.500                0.022                0.000                0.000                0.034               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.400                0.039                0.091                1.000                0.095               
select(no AGG)       0.400                0.039                0.091                1.000                0.095               
where                0.667                1.000                1.000                1.000                0.078               
where(no OP)         0.667                1.000                1.000                1.000                0.078               
group(no Having)     1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.182                1.000                1.000                0.118               
and/or               1.000                0.980                0.865                0.867                0.942               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.667                0.043                1.000                1.000                0.065               

eval_err_num:1
easy pred: select count(*) from singers
easy gold: select count(*) from singer

eval_err_num:2
easy pred: select count(*) from singers
easy gold: select count(*) from singer

eval_err_num:3
medium pred: select name, country, age from singers order by age desc
medium gold: select name, country, age from singer order by age desc

eval_err_num:4
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where country = 'france'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:5
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where nationality = 'french'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:6
medium pred: select s.name, s.release_year from singer as s join song as sg on s.singer_id = sg.singer_id order by s.age asc limit 1
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:7
medium pred: select name, release_year from songs where artist_id = ( select artist_id from artists order by age desc limit 1 )
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:8
easy pred: select distinct country from singers where age > 20
easy gold: select distinct country from singer where age > 20

eval_err_num:9
easy pred: select country from singers where age > 20 group by country having count(*) > 1
easy gold: select distinct country from singer where age > 20

eval_err_num:10
medium pred: select country, count(*) as numberofsingers from singer group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:11
medium pred: select country, count(*) as numberofsingers from singer group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:12
hard pred: select name from songs where age > (select avg(age) from singers)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:13
hard pred: select name from songs where age > (select avg(age) from singers)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:14
medium pred: select location, name from stadiums where capacity between 5000 and 10000
medium gold: select location, name from stadium where capacity between 5000 and 10000

eval_err_num:15
medium pred: select name, location from station where capacity between 5000 and 10000
medium gold: select location, name from stadium where capacity between 5000 and 10000

eval_err_num:16
medium pred: select max(capacity), avg(capacity) from stadiums
medium gold: select max(capacity), average from stadium

eval_err_num:17
medium pred: select avg(capacity) as averagecapacity, max(capacity) as maximumcapacity from stadiums
medium gold: select avg(capacity), max(capacity) from stadium

eval_err_num:18
medium pred: select t1.stadium_name, t1.capacity from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t1.stadium_name, t1.capacity order by avg(t2.attendance) desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:19
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:20
medium pred: select t1.stadium_name, t1.capacity from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t1.stadium_name, t1.capacity order by avg(t2.attendance) desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:21
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:22
medium pred: select stadium, count(*) as concert_count from concerts group by stadium
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:23
medium pred: select t1.stadium_name, count(t2.concert_id) as number_of_concerts from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_name order by number_of_concerts desc
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:24
extra pred: select s.stadium_name, s.capacity from stadiums as s join concerts as c on s.stadium_id = c.stadium_id where c.year >= 2014 group by s.stadium_name, s.capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:25
extra pred: select t1.stadium_name, t1.capacity from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id where t2.year > 2013 group by t1.stadium_name, t1.capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:26
hard pred: select extract(year from date) as year, count(*) as count from concerts group by year order by count desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:27
hard pred: select extract(year from date) as year, count(*) as count from concerts group by year order by count desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:28
hard pred: select distinct s.stadium_name from stadiums s left join concerts c on s.stadium_id = c.stadium_id where c.concert_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

eval_err_num:29
hard pred: select stadium_name from stadium where stadium_id not in (select event_stadium_id from event)
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

hard pred: select country from singer where age > 40 or age < 30
hard gold: select country from singer where age > 40 intersect select country from singer where age < 30

eval_err_num:30
hard pred: select distinct t1.stadium_name from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_year is null or t2.concert_year != 2014
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:31
hard pred: select official_name from city where city_id not in (select host_city_id from farm_competition where year = 2014)
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:32
medium pred: select c.name as concert_name, c.theme as concert_theme, count(s.singer_id) as number_of_singers from concerts as c join singers as s on c.concert_id = s.concert_id group by c.concert_id, c.name, c.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:33
medium pred: select concert_name, concert_theme, count(singer_name) as number_of_singers from concert group by concert_name, concert_theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:34
medium pred: select name, count(*) as number_of_concerts from concerts group by name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:35
medium pred: select t2.first_name, t2.last_name, count(t3.concert_id) as number_of_concerts from singers as t1 join people as t2 on t1.singer_id = t2.person_id join concerts as t3 on t1.singer_id = t3.singer_id group by t2.first_name, t2.last_name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:36
hard pred: select name from concerts where year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:37
hard pred: select name from head where concert_year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:38
medium pred: select first_name, nation from people where song_name like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:39
medium pred: select s.first_name, s.last_name, c.country from songs as s join singers as sg on s.singer_id = sg.singer_id join countries as c on sg.country_id = c.country_id where s.title like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:40
extra pred: select t1.stadium_name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in (2014, 2015) group by t1.stadium_name, t1.location having count(*) > 1
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:41
extra pred: select distinct t2.stadium_name, t2.location from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id where t2.year in (2014, 2015)
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:42
hard pred: select count(*) from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:43
hard pred: select count(*) from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:44
medium pred: select weight from dogs where age = (select min(age) from dogs)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:45
medium pred: select min(weight) from dogs where age = (select min(age) from dogs)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:46
medium pred: select pet_type, max(weight) as max_weight from pets group by pet_type
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:47
medium pred: select pettype, max(weight) as maxweight from pets group by pettype
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:48
medium pred: select count(*) as numberofpets from pets join students on pets.student_id = students.id where students.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:49
medium pred: select count(*) from pets join students on pets.student_id = students.student_id where students.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:50
hard pred: select count(*) from pets where owner_sex = 'f' and pet_type = 'dog'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:51
hard pred: select count(*) from pets join students on pets.student_id = students.id where students.gender = 'female' and pets.pet_type = 'dog'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:52
easy pred: select count(distinct type) from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:53
extra pred: select first_name from students where pet = 'cat' or pet = 'dog'
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:54
extra pred: select first_name from students where pet in ('cat', 'dog')
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:55
extra pred: select t1.first_name from students as t1 join pet_ownership as t2 on t1.student_id = t2.student_id where t2.pet_type = 'cat' and exists ( select 1 from pet_ownership as t3 where t3.student_id = t1.student_id and t3.pet_type = 'dog' )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:56
extra pred: select first_name from students where pet = 'cat' and pet = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:57
extra pred: select major, age from students where pet = 'cat' and pet = 'dog'
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:58
extra pred: select t2.major, t2.age from students as t2 left join pet_ownership as t1 on t2.student_id = t1.student_id where t1.pet_type = 'cat' and t1.pet_type is null
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:59
hard pred: select id from students where pet = 'cat' and pet is null
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:60
hard pred: select student_id from student_course_attendance where course_id = 301 and pet_type != 'cat'
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:61
extra pred: select first_name, age from students where pet = 'dog' and pet != 'cat'
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:62
extra pred: select first_name from students where pet_type = 'dog' and pet_type != 'cat'
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:63
medium pred: select t1.type, t1.weight from pet as t1 join pet_ownership as t2 on t1.pet_id = t2.pet_id where t2.owner_id = (select owner_id from pet_ownership where pet_id = (select pet_id from pet order by age desc limit 1))
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:64
medium pred: select distinct t1.pet_type, t1.weight from pets as t1 join animals as t2 on t1.animal_id = t2.animal_id where t2.age = (select min(age) from animals)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:65
medium pred: select id, weight from pets where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:66
medium pred: select pet_id, weight from pets where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:67
medium pred: select pet_type, avg(age) as average_age, max(age) as max_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:68
medium pred: select pet_type, avg(age) as average_age, max(age) as max_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:69
medium pred: select pet_type, avg(weight) as average_weight from pets group by pet_type
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:70
medium pred: select pettype, avg(weight) as averageweight from pets group by pettype
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:71
medium pred: select first_name, age from students where pet_owner = 'yes'
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:72
medium pred: select distinct t2.first_name, t2.age from student_course_registrations as t1 join students as t2 on t1.student_id = t2.student_id join pets as t3 on t2.student_id = t3.student_id
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:73
medium pred: select pet_id from students join pet_ownership on students.student_id = pet_ownership.student_id where last_name = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:74
medium pred: select pet_id from pets join students on pets.student_id = students.student_id where students.last_name = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:75
medium pred: select student_id, count(*) as pet_count from pets group by student_id having count(*) > 0
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:76
medium pred: select student_id, count(pet_id) as pet_count from students join pets on students.student_id = pets.student_id group by student_id
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:77
medium pred: select first_name, gender from student where pet_count > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:78
medium pred: select t1.first_name, t1.gender from students as t1 join pet_ownership as t2 on t1.student_id = t2.student_id group by t1.student_id having count(t2.pet_id) > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:79
hard pred: select s.last_name from students s join pets p on s.student_id = p.student_id where p.animal_type = 'cat' and p.age = 3
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:80
hard pred: select last_name from students where pet_age = 3 and pet_type = 'cat'
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:81
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:82
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:83
easy pred: select count(distinct continent) from city
easy gold: select count(*) from continents

eval_err_num:84
easy pred: select count(distinct continent) from city
easy gold: select count(*) from continents

eval_err_num:85
medium pred: select continent_id, continent_name, count(country_id) as number_of_countries from countries group by continent_id, continent_name having count(country_id) > 1
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:86
medium pred: select continent_id, continent_name, count(country_id) as number_of_countries from continents group by continent_id, continent_name
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:87
easy pred: select count(distinct country) from countries
easy gold: select count(*) from countries

eval_err_num:88
easy pred: select count(distinct country) from farm
easy gold: select count(*) from countries

eval_err_num:89
medium pred: select maker_full_name, maker_id, count(model_id) as number_of_models from car_maker group by maker_full_name, maker_id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:90
medium pred: select c.id, c.name, count(m.id) as model_count from car_makers as c join models as m on c.id = m.maker_id group by c.id, c.name
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:91
hard pred: select model, min(horsepower) from cars group by model
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:92
hard pred: select model from cars order by horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:93
extra pred: select model from cars where weight < (select avg(weight) from cars)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:94
extra pred: select model from cars where weight < (select avg(weight) from cars)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:95
extra pred: select maker_name from cars where year = 1970
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

