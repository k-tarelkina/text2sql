                     easy                 medium               hard                 extra                all                 
count                8                    31                   17                   12                   68                  
=====================   EXECUTION ACCURACY     =====================
execution            1.000                0.613                0.588                0.667                0.662               

=====================   TIME ACCELERATION     =====================
time acceleration    99.676               101.403              99.828               98.856               100.322             

====================== EXACT MATCHING ACCURACY =====================
exact match          1.000                0.548                0.294                0.417                0.515               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                0.889                1.000                0.909                0.932               
select(no AGG)       1.000                0.926                1.000                0.909                0.949               
where                1.000                0.769                0.364                0.455                0.590               
where(no OP)         1.000                0.769                0.545                0.545                0.667               
group(no Having)     0.000                0.833                1.000                1.000                0.889               
group                0.000                0.833                1.000                1.000                0.889               
order                0.000                1.000                0.500                1.000                0.889               
and/or               1.000                1.000                0.882                0.750                0.926               
IUEN                 0.000                0.000                0.500                0.600                0.500               
keywords             1.000                0.840                0.462                0.545                0.698               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               1.000                0.774                0.765                0.833                0.809               
select(no AGG)       1.000                0.806                0.765                0.833                0.824               
where                1.000                1.000                0.364                0.417                0.622               
where(no OP)         1.000                1.000                0.545                0.500                0.703               
group(no Having)     0.000                0.500                1.000                0.500                0.571               
group                0.000                0.500                1.000                0.500                0.571               
order                0.000                0.667                0.500                0.500                0.615               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.200                0.750                0.444               
keywords             1.000                0.724                0.353                0.500                0.597               
---------------------- PARTIAL MATCHING F1 --------------------------
select               1.000                0.828                0.867                0.870                0.866               
select(no AGG)       1.000                0.862                0.867                0.870                0.882               
where                1.000                0.870                0.364                0.435                0.605               
where(no OP)         1.000                0.870                0.545                0.522                0.684               
group(no Having)     1.000                0.625                1.000                0.667                0.696               
group                1.000                0.625                1.000                0.667                0.696               
order                1.000                0.800                0.500                0.667                0.727               
and/or               1.000                1.000                0.938                0.857                0.962               
IUEN                 1.000                1.000                0.286                0.667                0.471               
keywords             1.000                0.778                0.400                0.522                0.643               

medium pred: select t1.name, t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id order by t1.age limit 1
medium gold: select song_name, song_release_year from singer order by age limit 1

medium pred: select t2.name, t2.song_name, t2.song_release_year from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id order by t2.age limit 1
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:1

'singer_in_concert.song_name'
hard pred: select t2.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.concert_id where t1.age > ( select avg(age) from singer )
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:2

'singer.average'
hard pred: select t2.song_name from singer as t1 join singer as t2 on t1.age > t2.average
hard gold: select song_name from singer where age > (select avg(age) from singer)

medium pred: select max(capacity), avg(average) from stadium
medium gold: select max(capacity), average from stadium

medium pred: select t1.name, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

extra pred: select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year >= 2014 group by stadium_id order by count(*) desc limit 1 )
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

hard pred: select year from concert group by year order by count(year) desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

hard pred: select name from stadium where stadium_id not in ( select stadium_id from concert where year = '2014' )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select name from stadium where stadium_id not in ( select stadium_id from concert where year = '2014' )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:3

'concert.name'
medium pred: select t1.name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:4

'concert.name'
medium pred: select t1.name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:5

Error col: name
medium pred: select name, count(concert_id) from singer_in_concert group by singer_id
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:6

Error col: name
medium pred: select name, count(concert_id) from singer_in_concert group by singer_id
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:7

'singer_in_concert.name'
hard pred: select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id where t1.year = "2014"
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

medium pred: select t2.name, t2.country from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id where t2.song_name like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

hard pred: select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

hard pred: select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

medium pred: select weight from pets where pet_age = (select min(pet_age) from pets where pettype = 'dog')
medium gold: select weight from pets order by pet_age limit 1

medium pred: select weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select weight from pets order by pet_age limit 1

medium pred: select count(*) from student where age > 20 intersect select count(*) from has_pet
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

medium pred: select count(*) from student where age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

hard pred: select count(*) from student where sex = 'f' intersect select count(*) from pets where pettype = 'dog'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:8

Error col: stuid
hard pred: select count(*) from pets where pettype = "dog" and stuid in (select stuid from student where sex = "f")
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

extra pred: select fname from student where stuid in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat' or pettype = 'dog'))
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "cat" ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "dog" )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select major, age from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:9

'left'
extra pred: select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid not in ( select petid from pets where pettype = 'cat' )
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

hard pred: select stuid from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

hard pred: select stuid from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat'))
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

extra pred: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' intersect select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype != 'cat'
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

extra pred: select fname from student where stuid in (select stuid from has_pet where petid in (select petid from pets where pettype = 'dog') and stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat')))
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select t1.pettype, t1.weight from pets as t1 where t1.pet_age = ( select min(pet_age) from pets )
medium gold: select pettype, weight from pets order by pet_age limit 1

