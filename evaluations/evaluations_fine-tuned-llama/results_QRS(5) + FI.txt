                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.917                0.700                0.286                0.647                0.630               

=====================   TIME ACCELERATION     =====================
time acceleration    98.581               100.414              99.927               99.804               99.960              

====================== EXACT MATCHING ACCURACY =====================
exact match          0.917                0.680                0.190                0.471                0.570               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.917                0.848                1.000                0.938                0.898               
select(no AGG)       1.000                0.848                1.000                0.938                0.909               
where                1.000                0.700                0.273                0.500                0.569               
where(no OP)         1.000                0.700                0.273                0.688                0.627               
group(no Having)     0.000                1.000                1.000                1.000                1.000               
group                0.000                1.000                1.000                1.000                1.000               
order                0.000                1.000                1.000                1.000                1.000               
and/or               1.000                1.000                0.810                0.765                0.920               
IUEN                 0.000                0.000                1.000                0.750                0.800               
keywords             1.000                0.860                0.692                0.812                0.829               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.917                0.780                0.667                0.882                0.790               
select(no AGG)       1.000                0.780                0.667                0.882                0.800               
where                1.000                1.000                0.231                0.471                0.604               
where(no OP)         1.000                1.000                0.231                0.647                0.667               
group(no Having)     0.000                0.864                1.000                1.000                0.885               
group                0.000                0.864                1.000                1.000                0.885               
order                0.000                0.400                0.500                1.000                0.500               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.200                0.750                0.444               
keywords             1.000                0.804                0.429                0.765                0.716               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.917                0.812                0.800                0.909                0.840               
select(no AGG)       1.000                0.812                0.800                0.909                0.851               
where                1.000                0.824                0.250                0.485                0.586               
where(no OP)         1.000                0.824                0.250                0.667                0.646               
group(no Having)     1.000                0.927                1.000                1.000                0.939               
group                1.000                0.927                1.000                1.000                0.939               
order                1.000                0.571                0.667                1.000                0.667               
and/or               1.000                1.000                0.895                0.867                0.958               
IUEN                 1.000                1.000                0.333                0.750                0.571               
keywords             1.000                0.831                0.529                0.788                0.768               

medium pred: select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age ) from singer )
medium gold: select song_name, song_release_year from singer order by age limit 1

easy pred: select count(distinct country) from singer where age > 20
easy gold: select distinct country from singer where age > 20

medium pred: select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t
medium gold: select song_name, song_release_year from singer order by age limit 1

hard pred: select t2.song_name from singer as t1 join singer as t2 on t1.age > t2.age
hard gold: select song_name from singer where age > (select avg(age) from singer)

hard pred: select t2.song_name from singer as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.age > ( select avg(age) from singer ) select t2.song_name from singer as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.age > ( select cast(sum(t1.age) as real) / count(t1.singer_id) from singer as t1 ) select t2.song_name from singer as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.age > ( select avg(age) from singer ) select t2.song_name from singer as t1 join singer as t2 on t1.singer_id = t2.singer_id where t1.age > ( select cast(sum(t1.age) as real) / count(t1.singer_id) from singer as t1 )
hard gold: select song_name from singer where age > (select avg(age) from singer)

medium pred: select max(capacity), avg(capacity) from stadium
medium gold: select max(capacity), average from stadium

medium pred: select t1.stadium_id, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

extra pred: select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year > 2014 group by t1.stadium_id order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:1

'left'
hard pred: select t1.name from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

eval_err_num:2

'left'
hard pred: select t1.name from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

hard pred: select name from stadium where stadium_id not in (select stadium_id from concert where year = 2014)
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select name from stadium where stadium_id not in (select stadium_id from concert where year = 2014)
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:3

'concert.name'
medium pred: select t3.name, t3.theme, count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id join concert as t3 on t1.concert_id = t3.concert_id group by t1.concert_id
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:4

'singer_in_concert.name'
hard pred: select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id where t1.year = "2014"
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

hard pred: select count(*) from stadium where capacity = ( select max(capacity) from stadium )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

hard pred: select count(*) from stadium where capacity = ( select max(capacity) from stadium )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

medium pred: select weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:5

'pets.pet_id'
medium pred: select t2.weight from pets as t1 join has_pet as t2 on t1.pet_id = t2.pet_id where t1.pet_age = (select min(t1.pet_age) from pets as t1)
medium gold: select weight from pets order by pet_age limit 1

medium pred: select count(*) from student where age > 20 select count(*) from pets where petid in (select petid from has_pet where stuid in (select stuid from student where age > 20))
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

medium pred: select count(*) from student where age > 20 select count(*) from pets where petid in (select petid from has_pet where stuid in (select stuid from student where age > 20))
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:6

Error col: stuid
hard pred: select count(*) from pets where pettype = "dog" and stuid in ( select stuid from student where sex = "f" )
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:7

Error col: stuid
hard pred: select count(*) from pets where pettype = "dog" and stuid in ( select stuid from student where sex = "f" )
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in (select petid from pets where pettype = "cat" or pettype = "dog")
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in (select petid from pets where pettype = "cat" or pettype = "dog")
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "cat" ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = "dog" )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select t1.major, t1.age from student as t1 where t1.stuid not in ( select t2.stuid from has_pet as t2 where t2.petid in ( select t3.petid from pets as t3 where t3.pettype = 'cat' ) )
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

extra pred: select t1.major, t1.age from student as t1 where t1.stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat'))
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

hard pred: select stuid from student where stuid not in (select stuid from has_pet where petid not in (select petid from pets where pettype = 'cat'))
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

hard pred: select stuid from student where stuid not in (select stuid from has_pet where petid not in (select petid from pets where pettype = 'cat'))
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

extra pred: select t1.fname, t1.age from student as t1 where t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat")
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select pettype, weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

extra pred: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid not in (select petid from pets where pettype = "cat")
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select pettype from pets where pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:8

Error col: age
medium pred: select pettype, avg(age), max(age) from pets group by pettype
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

medium pred: select distinct fname, age from student where stuid in (select stuid from has_pet)
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

hard pred: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

hard pred: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:9

'countries.contid'
medium pred: select t1.contid, t1.continent, count(*) from countries as t1 group by t1.continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

medium pred: select t1.maker, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

medium pred: select t1.contid, t1.continent, count(t2.countryid) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:10

'car_names.horsepower'
hard pred: select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model order by t2.horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:11

'car_names.horsepower'
hard pred: select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model order by t2.horsepower limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:12

Error col: edispl
extra pred: select model from model_list where edispl < ( select avg(edispl) from model_list )
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

