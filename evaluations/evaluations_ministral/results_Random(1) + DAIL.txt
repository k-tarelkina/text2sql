                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.833                0.500                0.381                0.294                0.480               

=====================   TIME ACCELERATION     =====================
time acceleration    99.129               101.145              101.406              100.797              100.885             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.917                0.240                0.286                0.118                0.310               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                0.931                0.929                1.000                0.950               
select(no AGG)       1.000                0.966                0.929                1.000                0.967               
where                1.000                0.318                0.417                0.333                0.409               
where(no OP)         1.000                0.318                0.417                0.333                0.409               
group(no Having)     0.000                1.000                1.000                0.000                1.000               
group                0.000                1.000                1.000                0.000                1.000               
order                0.000                1.000                1.000                0.000                1.000               
and/or               1.000                0.957                0.800                0.765                0.895               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                0.519                0.500                0.333                0.529               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.917                0.540                0.619                0.353                0.570               
select(no AGG)       0.917                0.560                0.619                0.353                0.580               
where                1.000                0.500                0.385                0.118                0.375               
where(no OP)         1.000                0.500                0.385                0.118                0.375               
group(no Having)     0.000                0.045                1.000                0.000                0.115               
group                0.000                0.045                1.000                0.000                0.115               
order                0.000                0.400                0.500                0.000                0.375               
and/or               1.000                0.917                0.941                1.000                0.944               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                0.304                0.333                0.118                0.307               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.957                0.684                0.743                0.522                0.713               
select(no AGG)       0.957                0.709                0.743                0.522                0.725               
where                1.000                0.389                0.400                0.174                0.391               
where(no OP)         1.000                0.389                0.400                0.174                0.391               
group(no Having)     1.000                0.087                1.000                1.000                0.207               
group                1.000                0.087                1.000                1.000                0.207               
order                1.000                0.571                0.667                1.000                0.545               
and/or               1.000                0.936                0.865                0.867                0.919               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             1.000                0.384                0.400                0.174                0.388               

medium pred: select avg(age), min(age), max(age) from singer where country = 'france' and is_male = 'true'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

medium pred: select song_name, song_release_year from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on concert.concert_id = singer_in_concert.concert_id where age = (select min(age) from singer)
medium gold: select song_name, song_release_year from singer order by age limit 1

medium pred: select song_name, song_release_year from singer where age = (select min(age) from singer) and is_male = 'true'
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:1

Error col: as
medium pred: select country, count(*) as numberofsingers from singer group by country order by numberofsingers desc
medium gold: select country, count(*) from singer group by country

eval_err_num:2

Error col: as
medium pred: select country, count(*) as singer_count from singer group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:3

Error col: song_name
hard pred: select song_name from singer where age > (select avg(age) from singer) and song_name in (select song_name from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id)
hard gold: select song_name from singer where age > (select avg(age) from singer)

medium pred: select max(capacity), avg(average) from stadium
medium gold: select max(capacity), average from stadium

eval_err_num:4


medium pred: select count(*) from concert where year in ('2014', '2015')
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:5


medium pred: select count(*) from concert where year in ('2014', '2015')
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:6

Error col: as
medium pred: select name, count(concert_id) as numberofconcerts from stadium join concert on stadium.stadium_id = concert.stadium_id group by name order by numberofconcerts asc
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:7

Error col: as
medium pred: select count(*) as concert_count from concert group by stadium_id having count(*) > 1
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:8

's'
extra pred: select s.name, s.capacity from stadium s join concert c on s.stadium_id = c.stadium_id where c.year >= 2014 group by s.stadium_id order by count(c.concert_id) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

extra pred: select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > '2013' group by stadium_id order by count(*) desc limit 1 )
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1

hard pred: select stadium_id, location, name from stadium where stadium_id not in (select stadium_id from concert)
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

hard pred: select country from singer where age > 40 or age < 30
hard gold: select country from singer where age > 40 intersect select country from singer where age < 30

hard pred: select name from stadium where stadium_id not in ( select stadium_id from concert where year = '2014' )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:9

Error col: as
medium pred: select concert.concert_name, concert.theme, count(singer_in_concert.singer_id) as number_of_singers from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.concert_name, concert.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:10

Error col: as
medium pred: select concert_name, theme, count(singer_in_concert.singer_id) as num_singers from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.concert_id, concert_name, theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:11

's'
medium pred: select s.name, count(c.concert_id) as numberofconcerts from singer s join singer_in_concert sic on s.singer_id = sic.singer_id join concert c on sic.concert_id = c.concert_id group by s.name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:12

Error col: as
medium pred: select name, count(*) as number_of_concerts from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id group by name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

hard pred: select name from singer where singer_id in ( select singer_id from singer_in_concert where concert_id in ( select concert_id from concert where year = '2014' ) )
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

hard pred: select name from singer where singer_id in ( select singer_id from singer_in_concert where concert_id in ( select concert_id from concert where year = '2014' ) )
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:13


extra pred: select location, name from stadium where stadium_id in ( select stadium_id from concert where year in ('2014', '2015') )
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:14


extra pred: select location, name from stadium where stadium_id in ( select stadium_id from concert where year in ('2014', '2015') group by stadium_id having count(*) = 2 )
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

medium pred: select weight from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog')
medium gold: select weight from pets order by pet_age limit 1

medium pred: select weight from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog')
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:15

Error col: as
medium pred: select pettype, max(weight) as maxweight from pets group by pettype
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:16

Error col: as
medium pred: select pettype, max(weight) as maxweight from pets group by pettype
medium gold: select max(weight), pettype from pets group by pettype

medium pred: select count(*) from pets where petid in ( select stuid from student where age > 20 )
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

medium pred: select count(*) from pets where petid in ( select petid from has_pet where stuid in ( select stuid from student where age > 20 ) )
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:17

Error col: stuid
hard pred: select count(*) from pets where pettype = 'dog' and stuid in ( select stuid from student where sex = 'f' )
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:18

Error col: stuid
hard pred: select count(*) from pets where pettype = 'dog' and stuid in ( select stuid from student where sex = 'female' )
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:19

Error col: to
easy pred: select to determine the number of different types of pets, you can use the following sql query: select count(distinct pettype) from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:20


extra pred: select fname from student where stuid in (select stuid from has_pet where petid in (select petid from pets where pettype in ('cat', 'dog')))
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:21


extra pred: select fname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype in ('cat', 'dog') ) )
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select fname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) and petid in ( select petid from pets where pettype = 'dog' ) )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select fname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) intersect select stuid from has_pet where petid in ( select petid from pets where pettype = 'dog' ) )
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:22

Error col: pettype
extra pred: select major, age from student where stuid not in (select stuid from has_pet where pettype = 'cat')
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:23

Error col: pettype
extra pred: select major, age from student where stuid not in (select stuid from has_pet where pettype = 'cat')
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:24

Error col: pettype
hard pred: select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:25

Error col: pettype
hard pred: select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

extra pred: select fname, age from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'dog' ) and stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:26

Error col: pettype
extra pred: select fname from student where stuid in (select stuid from has_pet where pettype = 'dog') and stuid not in (select stuid from has_pet where pettype = 'cat')
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select pettype, weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

medium pred: select pettype, weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:27

Error col: as
medium pred: select avg(pet_age) as avg_age, max(pet_age) as max_age from pets group by pettype
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

medium pred: select avg(weight) from pets group by pettype
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:28

Error col: to
medium pred: select to find the average and maximum age for each pet type, you can use the following sql queries: select pettype, avg(pet_age) as avgage, max(pet_age) as maxage from pets group by pettype; select pettype, avg(pet_age) as avgage, max(pet_age) as maxage from pets group by pettype
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:29

Error col: as
medium pred: select pettype, avg(weight) as average_weight from pets group by pettype
medium gold: select avg(weight), pettype from pets group by pettype

medium pred: select fname, age from student where stuid in (select stuid from has_pet)
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

medium pred: select distinct fname, age from student where stuid in (select stuid from has_pet)
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

medium pred: select petid from has_pet where stuid in (select stuid from student where lname = 'smith')
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

medium pred: select petid from has_pet where stuid = (select stuid from student where lname = 'smith')
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:30

Error col: as
medium pred: select stuid, count(petid) as petcount from has_pet group by stuid having count(petid) > 0
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:31

Error col: as
medium pred: select count(stuid) as petcount, stuid from has_pet group by stuid
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

medium pred: select fname, sex from student where stuid in ( select stuid from has_pet group by stuid having count(petid) > 1 )
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

medium pred: select fname, sex from student where stuid in ( select stuid from has_pet group by stuid having count(petid) > 1 )
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

hard pred: select lname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pet_age = 3 ) )
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

hard pred: select lname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pet_age = 3 and pettype = 'cat' ) )
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:32

Error col: as
medium pred: select continents.contid, continents.continent, count(countries.countryid) as numberofcountries from continents join countries on continents.contid = countries.continent group by continents.contid, continents.continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:33

'left'
medium pred: select continents.contid, continents.continent, count(countries.countryid) as countrycount from continents left join countries on continents.contid = countries.continent group by continents.contid, continents.continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:34

Error col: as
medium pred: select maker, count(modelid) as numberofmodels from car_makers join model_list on car_makers.id = model_list.maker group by maker
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:35

'c_makers'
medium pred: select c_makers.id, c_makers.fullname, count(m_list.modelid) as modelsproduced from car_makers c_makers join model_list m_list on c_makers.id = m_list.maker group by c_makers.id, c_makers.fullname
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:36

Error col: horsepower
hard pred: select model from car_names order by horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:37

Error col: horsepower
hard pred: select model from car_names where horsepower = (select min(horsepower) from cars_data)
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:38

Error col: id
extra pred: select model from car_names where id in ( select id from cars_data group by id having avg(weight) > weight )
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:39

Error col: modelid
extra pred: select modelid from cars_data where weight < (select avg(weight) from cars_data)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:40

Error col: year
extra pred: select maker from car_makers where year = 1970
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

