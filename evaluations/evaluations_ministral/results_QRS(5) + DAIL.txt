                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.583                0.440                0.524                0.353                0.460               

=====================   TIME ACCELERATION     =====================
time acceleration    157.812              100.418              101.467              98.441               107.776             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.583                0.320                0.524                0.118                0.360               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.583                0.962                1.000                1.000                0.900               
select(no AGG)       0.583                0.962                1.000                1.000                0.900               
where                1.000                0.667                0.786                0.500                0.718               
where(no OP)         1.000                0.667                0.786                0.500                0.718               
group(no Having)     0.000                0.750                1.000                0.000                0.714               
group                0.000                0.500                1.000                0.000                0.571               
order                0.000                1.000                1.000                1.000                1.000               
and/or               1.000                0.960                1.000                0.733                0.938               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                0.783                0.812                0.500                0.776               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.583                0.500                0.762                0.353                0.540               
select(no AGG)       0.583                0.500                0.762                0.353                0.540               
where                1.000                0.714                0.846                0.176                0.583               
where(no OP)         1.000                0.714                0.846                0.176                0.583               
group(no Having)     0.000                0.136                1.000                0.000                0.192               
group                0.000                0.091                1.000                0.000                0.154               
order                0.000                0.400                0.500                0.500                0.438               
and/or               1.000                1.000                0.952                0.846                0.968               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                0.391                0.619                0.176                0.432               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.583                0.658                0.865                0.522                0.675               
select(no AGG)       0.583                0.658                0.865                0.522                0.675               
where                1.000                0.690                0.815                0.261                0.644               
where(no OP)         1.000                0.690                0.815                0.261                0.644               
group(no Having)     1.000                0.231                1.000                1.000                0.303               
group                1.000                0.154                1.000                1.000                0.242               
order                1.000                0.571                0.667                0.667                0.609               
and/or               1.000                0.980                0.976                0.786                0.953               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             1.000                0.522                0.703                0.261                0.555               

easy pred: select count(distinct singer_id) from singer
easy gold: select count(*) from singer

eval_err_num:1
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singer where country = 'france'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:2
medium pred: select avg(age) as average_age, min(age) as min_age, max(age) as max_age from singer where country = 'france'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

medium pred: select t1.song_name, t1.song_release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t1.age = (select min(age) from singer)
medium gold: select song_name, song_release_year from singer order by age limit 1

medium pred: select song_name, song_release_year from singer where age = (select min(age) from singer) join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on concert.concert_id = singer_in_concert.concert_id join stadium on stadium.stadium_id = concert.stadium_id
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:3
medium pred: select country, count(*) as numberofsingers from singer group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:4
medium pred: select country, count(*) as numberofsingers from singer group by country
medium gold: select country, count(*) from singer group by country

hard pred: select t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t1.age > (select avg(age) from singer)
hard gold: select song_name from singer where age > (select avg(age) from singer)

hard pred: select song_name from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id join concert on concert.concert_id = singer_in_concert.concert_id where singer.age > (select avg(age) from singer)
hard gold: select song_name from singer where age > (select avg(age) from singer)

medium pred: select max(capacity), avg(capacity) from stadium
medium gold: select max(capacity), average from stadium

eval_err_num:5
medium pred: select avg(capacity) as average_capacity, max(capacity) as max_capacity from stadium
medium gold: select avg(capacity), max(capacity) from stadium

eval_err_num:6
medium pred: select count(*) from concert where year in ('2014', '2015')
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:7
medium pred: select count(*) from concert where year in ('2014', '2015')
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:8
medium pred: select stadium_id, count(concert_id) as numberofconcerts from concert group by stadium_id
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:9
medium pred: select t1.name, count(*) as numberofconcerts from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

extra pred: select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year >= '2014' group by t1.name, t1.capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

extra pred: select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > '2013' group by stadium_id order by count(*) desc limit 1 )
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1

hard pred: select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select name from stadium where stadium_id not in ( select stadium_id from concert where year = '2014' )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

hard pred: select distinct t2.country from singer as t1 join singer_in_concert as t3 on t1.singer_id = t3.singer_id join concert as t4 on t3.concert_id = t4.concert_id join stadium as t5 on t4.stadium_id = t5.stadium_id join singer as t2 on t1.singer_id = t2.singer_id where t1.age > 40 and t2.age < 30
hard gold: select country from singer where age > 40 intersect select country from singer where age < 30

eval_err_num:10
medium pred: select t1.concert_name, t1.theme, count(*) as singer_count from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id, t1.concert_name, t1.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:11
medium pred: select c.concert_name, c.theme, count(si.singer_id) as numberofsingers from concert as c join singer_in_concert as si on c.concert_id = si.concert_id group by c.concert_id, c.concert_name, c.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:12
medium pred: select t1.name, count(*) as concert_count from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.singer_id
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:13
medium pred: select t1.name, count(*) as numberofconcerts from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.singer_id
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:14
extra pred: select distinct t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:15
extra pred: select distinct t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:16
hard pred: select count(*) as concert_count from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:17
medium pred: select weight from pets where pet_age = (select min(pet_age) from pets where pet_type = 'dog')
medium gold: select weight from pets order by pet_age limit 1

medium pred: select weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:18
medium pred: select pettype, max(weight) as max_weight from pets group by pettype
medium gold: select max(weight), pettype from pets group by pettype

medium pred: select count(*) from pets join has_pet on pets.petid = has_pet.petid join student on has_pet.stuid = student.stuid where student.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:19
extra pred: select fname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype in ('cat', 'dog')
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:20
extra pred: select fname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype in ('cat', 'dog')
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

extra pred: select fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' and pets.pettype = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

extra pred: select s.fname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p1 on hp.petid = p1.petid join pets as p2 on hp.petid = p2.petid where p1.pettype = 'cat' and p2.pettype = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:21
extra pred: select s.major, s.age from student as s left join has_pet as hp on s.stuid = hp.stuid left join pets as p on hp.petid = p.petid where p.pettype != 'cat'
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:22
extra pred: select s.major, s.age from student as s left join has_pet as hp on s.stuid = hp.stuid left join pets as p on hp.petid = p.petid where p.pettype = 'cat' and p.petid is null
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:23
hard pred: select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:24
hard pred: select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:25
extra pred: select s.fname, s.age from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype = 'dog' and not exists ( select 1 from has_pet as hp2 join pets as p2 on hp2.petid = p2.petid where hp2.stuid = s.stuid and p2.pettype = 'cat' )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select pettype, weight from pets where pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:26
extra pred: select s.fname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype = 'dog' and not exists ( select 1 from has_pet as hp2 join pets as p2 on hp2.petid = p2.petid where hp2.stuid = s.stuid and p2.pettype = 'cat' )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

medium pred: select t2.pettype, t2.weight from pets as t2 join has_pet as t3 on t2.petid = t3.petid join student as t1 on t3.stuid = t1.stuid where t2.pet_age = (select min(pet_age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:27
medium pred: select pettype, avg(pet_age) as avg_age, max(pet_age) as max_age from pets group by pettype
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:28
medium pred: select pettype, avg(pet_age) as avg_age, max(pet_age) as max_age from pets group by pettype
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:29
medium pred: select pettype, avg(weight) as average_weight from pets group by pettype
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:30
medium pred: select pettype, avg(weight) as average_weight from pets group by pettype
medium gold: select avg(weight), pettype from pets group by pettype

medium pred: select p.petid from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where s.lname = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:31
medium pred: select t1.stuid, count(*) as num_pets from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

medium pred: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.fname, t1.sex having count(t2.petid) > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

medium pred: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(t2.petid) > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:32
extra pred: select avg(student.age) from student left join has_pet on student.stuid = has_pet.stuid where has_pet.stuid is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

easy pred: select count(distinct contid) from continents
easy gold: select count(*) from continents

easy pred: select count(distinct contid) from continents
easy gold: select count(*) from continents

eval_err_num:33
medium pred: select t1.contid, t1.continent, count(t2.countryid) as numberofcountries from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

easy pred: select count(distinct countryid) from countries
easy gold: select count(*) from countries

easy pred: select count(distinct countryid) from countries
easy gold: select count(*) from countries

eval_err_num:34
medium pred: select t1.contid, t1.continent, count(t2.countryid) as countrycount from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:35
medium pred: select t1.fullname, t1.id, count(*) as modelcount from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.fullname, t1.id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:36
medium pred: select t1.id, t1.fullname, count(t2.modelid) as modelsproduced from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id, t1.fullname
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:37
hard pred: select model from car_names join car_makers on car_names.make = car_makers.maker join model_list on car_names.model = model_list.model where horsepower = (select min(horsepower) from cars_data)
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:38
hard pred: select model from car_names join car_makers on car_names.make = car_makers.maker order by horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:39
extra pred: select model from car_names where id in ( select id from cars_data where weight < (select avg(weight) from cars_data) )
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:40
extra pred: select distinct t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid join cars_data as t3 on t2.id = t3.id where t3.year = 1970
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

