                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.167                0.020                0.000                0.000                0.030               

=====================   TIME ACCELERATION     =====================
time acceleration    102.387              102.456              0.000                0.000                102.410             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.167                0.020                0.000                0.000                0.030               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               1.000                1.000                0.000                0.000                1.000               
select(no AGG)       1.000                1.000                0.000                0.000                1.000               
where                1.000                0.000                0.000                0.000                1.000               
where(no OP)         1.000                0.000                0.000                0.000                1.000               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                1.000                0.000                0.000                1.000               
and/or               1.000                0.960                0.810                0.765                0.900               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                1.000                0.000                0.000                1.000               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.167                0.020                0.000                0.000                0.030               
select(no AGG)       0.167                0.020                0.000                0.000                0.030               
where                0.500                0.000                0.000                0.000                0.042               
where(no OP)         0.500                0.000                0.000                0.000                0.042               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.100                0.000                0.000                0.062               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.500                0.022                0.000                0.000                0.034               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.286                0.039                1.000                1.000                0.058               
select(no AGG)       0.286                0.039                1.000                1.000                0.058               
where                0.667                1.000                1.000                1.000                0.080               
where(no OP)         0.667                1.000                1.000                1.000                0.080               
group(no Having)     1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.182                1.000                1.000                0.118               
and/or               1.000                0.980                0.895                0.867                0.947               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.667                0.043                1.000                1.000                0.066               
eval_err_num:1
easy pred: select count(*) from singers
easy gold: select count(*) from singer

eval_err_num:2
easy pred: select count(*) from singers
easy gold: select count(*) from singer

eval_err_num:3
medium pred: select name, country, age from singers order by age desc
medium gold: select name, country, age from singer order by age desc

eval_err_num:4
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where country = 'france'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:5
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where nationality = 'french'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:6
medium pred: select song_name, release_year from songs join artists on songs.artist_id = artists.artist_id where artists.age = ( select min(age) from artists )
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:7
medium pred: select name, release_year from song where artist_id = ( select artist_id from artist order by age desc limit 1 )
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:8
easy pred: select distinct country from singers where age > 20
easy gold: select distinct country from singer where age > 20

eval_err_num:9
easy pred: select distinct country from singers where age > 20
easy gold: select distinct country from singer where age > 20

eval_err_num:10
medium pred: select country, count(*) as number_of_singers from singers group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:11
medium pred: select country, count(*) as singer_count from singers group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:12
hard pred: select name from song where singer_age > (select avg(singer_age) from song)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:13
hard pred: select song_name from songs join artists on songs.artist_id = artists.artist_id where artists.age > (select avg(age) from artists)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:14
medium pred: select location, name from stadiums where capacity between 5000 and 10000
medium gold: select location, name from stadium where capacity between 5000 and 10000

eval_err_num:15
medium pred: select distinct t1.location, t1.name from stations as t1 join station_capacity as t2 on t1.station_id = t2.station_id where t2.capacity between 5000 and 10000
medium gold: select location, name from stadium where capacity between 5000 and 10000

eval_err_num:16
medium pred: select max(capacity) as max_capacity, avg(capacity) as average_capacity from stadiums
medium gold: select max(capacity), average from stadium

eval_err_num:17
medium pred: select avg(capacity) as average_capacity, max(capacity) as maximum_capacity from stadiums
medium gold: select avg(capacity), max(capacity) from stadium

eval_err_num:18
medium pred: select stadium_name, capacity from stadiums order by average_attendance desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:19
medium pred: select name, capacity from stadiums order by avg(attendance) desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:20
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:21
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:22
medium pred: select stadium, count(*) as numberofconcerts from concerts group by stadium
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:23
medium pred: select stadium, count(*) as concert_count from concerts group by stadium
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:24
extra pred: select stadium_name, capacity from concerts where year >= 2014 group by stadium_name, capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:25
extra pred: select stadium_name, capacity from stadiums where year > 2013 order by concert_count desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:26
hard pred: select extract(year from eventdate) as year, count(*) as numberofconcerts from concerts group by extract(year from eventdate) order by numberofconcerts desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:27
hard pred: select extract(year from eventdate) as year, count(*) as concertcount from events group by extract(year from eventdate) order by concertcount desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:28
hard pred: select name from stadium where concert_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

eval_err_num:29
hard pred: select name from stadium where concert_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

eval_err_num:30
hard pred: select country from singers where age > 40 or age < 30
hard gold: select country from singer where age > 40 intersect select country from singer where age < 30

eval_err_num:31
hard pred: select name from stadium where year not in (2014)
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:32
hard pred: select stadium_name from stadiums where stadium_id not in ( select stadium_id from concerts where year = 2014 )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:33
medium pred: select c.concert_name, c.theme, count(s.singer_id) as num_singers from concerts as c join concert_singers as cs on c.concert_id = cs.concert_id join singers as s on cs.singer_id = s.singer_id group by c.concert_name, c.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:34
medium pred: select c.concert_name, c.theme, count(s.singer_id) as number_of_singers from concerts c join concert_singers cs on c.concert_id = cs.concert_id join singers s on cs.singer_id = s.singer_id group by c.concert_name, c.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:35
medium pred: select singer_name, count(*) as num_concerts from concerts group by singer_name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:36
medium pred: select singer_name, count(*) as concert_count from concerts group by singer_name order by concert_count desc
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:37
hard pred: select distinct singer_name from concerts where year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:38
hard pred: select singer_name from concerts join concert_singers on concerts.concert_id = concert_singers.concert_id where concerts.year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:39
medium pred: select distinct t1.name, t2.nation from songs as t1 join artists as t2 on t1.artist_id = t2.artist_id where t1.title like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:40
medium pred: select s.name, s.country_of_origin from songs as s join artists as a on s.artist_id = a.artist_id where s.title like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:41
extra pred: select s.stadium_name, s.location from stadiums s join concerts c on s.stadium_id = c.stadium_id where c.year in (2014, 2015) group by s.stadium_name, s.location having count(c.year) = 2
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:42
extra pred: select distinct s.stadium_name, s.location from concerts c join stadiums s on c.stadium_id = s.stadium_id where c.year in (2014, 2015)
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:43
hard pred: select count(*) as concert_count from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:44
hard pred: select count(*) from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:45
medium pred: select weight from dogs where age = (select min(age) from dogs)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:46
medium pred: select weight from dog where age = (select min(age) from dog)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:47
medium pred: select pet_type, max(weight) as max_weight from pets group by pet_type
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:48
medium pred: select pet_type, max(weight) as max_weight from pet group by pet_type
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:49
medium pred: select count(*) as num_pets from pets join students on pets.student_id = students.student_id where students.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:50
medium pred: select count(*) as pet_count from pets join students on pets.student_id = students.student_id where students.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:51
hard pred: select count(*) from pets join students on pets.owner_id = students.student_id where students.sex = 'f' and pets.type = 'dog'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:52
hard pred: select count(*) as dog_pets_raised_by_female_students from students join pet_ownership on students.student_id = pet_ownership.student_id where pet_type = 'dog' and gender = 'female'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:53
easy pred: select count(distinct type) from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:54
easy pred: select distinct pet_type from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:55
extra pred: select first_name from students where pet = 'cat' or pet = 'dog' limit 1
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:56
extra pred: select first_name from student where pet = 'cat' or pet = 'dog'
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:57
extra pred: select first_name from students join pets on students.student_id = pets.student_id where pet_type = 'cat' and pet_type = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:58
extra pred: select first_name from student where pet = 'cat' and pet = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:59
extra pred: select major, age from students where pet_type != 'cat'
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:60
extra pred: select major, age from students where pet_type != 'cat'
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:61
hard pred: select student_id from students where pet_id is null
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:62
hard pred: select distinct student_id from students where student_id not in ( select distinct student_id from pets where pet_type = 'cat' )
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:63
extra pred: select s.first_name, s.age from students s join pets p on s.student_id = p.student_id where p.pet_type = 'dog' and not exists ( select 1 from pets p2 where p2.student_id = s.student_id and p2.pet_type = 'cat' )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:64
extra pred: select first_name from students where pet_type = 'dog' and pet_type not in ('cat')
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:65
medium pred: select type, weight from pet where age = (select min(age) from pet)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:66
medium pred: select pet_type, weight from animals where age = (select min(age) from animals) limit 1
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:67
medium pred: select pet_id, weight from pets where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:68
medium pred: select pet_id, weight from pets where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:69
medium pred: select pet_type, avg(age) as average_age, max(age) as maximum_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:70
medium pred: select pet_type, avg(age) as average_age, max(age) as max_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:71
medium pred: select pet_type, avg(weight) as average_weight from pets group by pet_type
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:72
medium pred: select pet_type, avg(weight) as average_weight from pets group by pet_type
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:73
medium pred: select first_name, age from students join pets on students.student_id = pets.student_id
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:74
medium pred: select distinct t1.first_name, t2.age from students as t1 join student_pets as t2 on t1.student_id = t2.student_id
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:75
medium pred: select pet_id from pet join student on pet.student_id = student.id where student.last_name = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:76
medium pred: select pet_id from pets join students on pets.student_id = students.student_id where students.last_name = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:77
medium pred: select t1.student_id, count(t2.pet_id) as pet_count from students as t1 join pet_ownership as t2 on t1.student_id = t2.student_id group by t1.student_id
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:78
medium pred: select t1.student_id, count(t2.pet_id) as pet_count from student_course_registrations as t1 join pets as t2 on t1.student_id = t2.student_id group by t1.student_id
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:79
medium pred: select first_name, gender from student where pet_count > 1 limit 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:80
medium pred: select first_name, gender from student where pet_count > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:81
hard pred: select t1.last_name from students as t1 join pets as t2 on t1.student_id = t2.owner_id where t2.pet_type = 'cat' and t2.age = 3
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:82
hard pred: select s.last_name from students s join pets p on s.student_id = p.student_id where p.age = 3 and p.type = 'cat'
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:83
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:84
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:85
easy pred: select count(distinct continent) from world
easy gold: select count(*) from continents

eval_err_num:86
easy pred: select count(distinct continent) from city
easy gold: select count(*) from continents

eval_err_num:87
medium pred: select continent_id, continent_name, count(country_id) as number_of_countries from continent group by continent_id, continent_name
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:88
medium pred: select continentid, continentname, count(countryid) as numberofcountries from continent join country on continent.continentid = country.continentid group by continentid, continentname
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:89
easy pred: select count(distinct country_id) from countries
easy gold: select count(*) from countries

eval_err_num:90
easy pred: select count(distinct country_id) from country
easy gold: select count(*) from countries

eval_err_num:91
medium pred: select c.maker_full_name, c.maker_id, count(m.model_id) as number_of_models from car_maker c join model m on c.maker_id = m.maker_id group by c.maker_full_name, c.maker_id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:92
medium pred: select car_maker_id, car_maker_name, count(model_id) as number_of_models from car_makers join models on car_makers.car_maker_id = models.car_maker_id group by car_makers.car_maker_id, car_makers.car_maker_name
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:93
hard pred: select model, min(horsepower) from cars group by model
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:94
hard pred: select model from cars order by horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:95
extra pred: select model from cars where weight < (select avg(weight) from cars)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:96
extra pred: select model from cars where weight < (select avg(weight) from cars)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:97
extra pred: select distinct maker_name from cars where year = 1970
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

