                     easy                 medium               hard                 extra                all                 
count                12                   50                   21                   17                   100                 
=====================   EXECUTION ACCURACY     =====================
execution            0.250                0.040                0.000                0.000                0.050               

=====================   TIME ACCELERATION     =====================
time acceleration    100.123              102.031              102.314              0.000                100.981             

====================== EXACT MATCHING ACCURACY =====================
exact match          0.250                0.040                0.000                0.000                0.050               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.750                1.000                1.000                0.000                0.857               
select(no AGG)       0.750                1.000                1.000                0.000                0.857               
where                1.000                1.000                0.000                0.000                0.800               
where(no OP)         1.000                1.000                0.000                0.000                0.800               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                1.000                0.000                0.000                1.000               
and/or               1.000                0.960                0.800                0.765                0.899               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             1.000                1.000                0.000                0.000                0.833               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.250                0.040                0.048                0.000                0.060               
select(no AGG)       0.250                0.040                0.048                0.000                0.060               
where                0.750                0.071                0.000                0.000                0.083               
where(no OP)         0.750                0.071                0.000                0.000                0.083               
group(no Having)     0.000                0.000                0.000                0.000                0.000               
group                0.000                0.000                0.000                0.000                0.000               
order                0.000                0.100                0.000                0.000                0.062               
and/or               1.000                1.000                0.941                1.000                0.989               
IUEN                 0.000                0.000                0.000                0.000                0.000               
keywords             0.750                0.043                0.000                0.000                0.057               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.375                0.077                0.091                1.000                0.112               
select(no AGG)       0.375                0.077                0.091                1.000                0.112               
where                0.857                0.133                1.000                1.000                0.151               
where(no OP)         0.857                0.133                1.000                1.000                0.151               
group(no Having)     1.000                1.000                1.000                1.000                1.000               
group                1.000                1.000                1.000                1.000                1.000               
order                1.000                0.182                1.000                1.000                0.118               
and/or               1.000                0.980                0.865                0.867                0.942               
IUEN                 1.000                1.000                1.000                1.000                1.000               
keywords             0.857                0.083                1.000                1.000                0.106               
eval_err_num:1
easy pred: select count(distinct singer) from artists
easy gold: select count(*) from singer

eval_err_num:2
easy pred: select count(*) from singers
easy gold: select count(*) from singer

eval_err_num:3
medium pred: select name, country, age from singers order by age desc
medium gold: select name, country, age from singer order by age desc

eval_err_num:4
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where country = 'france'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:5
medium pred: select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singers where nationality = 'french'
medium gold: select avg(age), min(age), max(age) from singer where country = 'france'

eval_err_num:6
medium pred: select t2.year, t1.official_name from song as t1 join artist as t2 on t1.artist_id = t2.artist_id order by t2.age desc limit 1
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:7
medium pred: select song_name, release_year from songs where singer_id = ( select singer_id from singers order by age desc limit 1 )
medium gold: select song_name, song_release_year from singer order by age limit 1

eval_err_num:8
easy pred: select distinct country from singers where age > 20
easy gold: select distinct country from singer where age > 20

eval_err_num:9
medium pred: select country, count(distinct singer_id) as numberofsingers from city group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:10
medium pred: select country, count(*) as singer_count from singers group by country
medium gold: select country, count(*) from singer group by country

eval_err_num:11
hard pred: select distinct s.song_name from song s join singer sg on s.singer_id = sg.singer_id where sg.age > (select avg(age) from singer)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:12
hard pred: select song_name from songs join artists on songs.artist_id = artists.artist_id where artists.age > (select avg(age) from artists)
hard gold: select song_name from singer where age > (select avg(age) from singer)

eval_err_num:13
medium pred: select station_name, location from station where capacity between 5000 and 10000
medium gold: select location, name from stadium where capacity between 5000 and 10000

eval_err_num:14
medium pred: select max(capacity) as max_capacity, avg(capacity) as average_capacity from stadiums
medium gold: select max(capacity), average from stadium

eval_err_num:15
medium pred: select avg(capacity) as average_capacity, max(capacity) as maximum_capacity from stadiums
medium gold: select avg(capacity), max(capacity) from stadium

eval_err_num:16
medium pred: select stadium_name, capacity from stadiums order by average_attendance desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:17
medium pred: select stadium_name, capacity from stadiums order by average_attendance desc limit 1
medium gold: select name, capacity from stadium order by average desc limit 1

eval_err_num:18
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:19
medium pred: select count(*) from concerts where year in (2014, 2015)
medium gold: select count(*) from concert where year = 2014 or year = 2015

eval_err_num:20
medium pred: select t1.stadium_name, count(t2.concert_id) as numberofconcerts from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_name
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:21
medium pred: select stadium, count(*) as concert_count from concerts group by stadium
medium gold: select t2.name, count(*) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id

eval_err_num:22
extra pred: select t1.stadium_name, t1.capacity from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id where t2.year >= 2014 group by t1.stadium_name, t1.capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year >= 2014 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:23
extra pred: select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_date > '2013-01-01' group by t1.name, t1.capacity order by count(*) desc limit 1
extra gold: select t2.name, t2.capacity from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year > 2013 group by t2.stadium_id order by count(*) desc limit 1

eval_err_num:24
hard pred: select extract(year from event_date) as year, count(*) as concert_count from events group by year order by concert_count desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:25
hard pred: select extract(year from concert_date) as year, count(*) as concert_count from concerts group by extract(year from concert_date) order by concert_count desc limit 1
hard gold: select year from concert group by year order by count(*) desc limit 1

eval_err_num:26
hard pred: select t1.stadium_name from city as t1 left join farm_competition as t2 on t1.city_id = t2.host_city_id where t2.host_city_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

eval_err_num:27
hard pred: select distinct s.stadium_name from stadiums s left join concerts c on s.stadium_id = c.stadium_id where c.stadium_id is null
hard gold: select name from stadium where stadium_id not in (select stadium_id from concert)

hard pred: select country from singer where age > 40 or age < 30
hard gold: select country from singer where age > 40 intersect select country from singer where age < 30

eval_err_num:28
hard pred: select name from stadium where year not in (2014)
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:29
hard pred: select stadium_name from stadium where stadium_id not in ( select stadium_id from concert where year = 2014 )
hard gold: select name from stadium except select t2.name from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014

eval_err_num:30
medium pred: select c.official_name, f.theme, count(s.singer_id) as numberofsingers from city c join concert f on c.city_id = f.host_city_id join singer s on f.concert_id = s.concert_id group by c.official_name, f.theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:31
medium pred: select concert_name, theme, count(singer_name) as number_of_singers from concerts join singers on concerts.concert_id = singers.concert_id group by concert_name, theme
medium gold: select t2.concert_name, t2.theme, count(*) from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id group by t2.concert_id

eval_err_num:32
medium pred: select singer_name, count(*) as number_of_concerts from concerts group by singer_name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:33
medium pred: select first_name, count(*) as number_of_concerts from singers group by first_name
medium gold: select t2.name, count(*) from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id group by t2.singer_id

eval_err_num:34
hard pred: select distinct singer_name from concerts where year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:35
hard pred: select name from singer where concert_year = 2014
hard gold: select t2.name from singer_in_concert as t1 join singer as t2 on t1.singer_id = t2.singer_id join concert as t3 on t1.concert_id = t3.concert_id where t3.year = 2014

eval_err_num:36
medium pred: select s.singer_name, s.nation from songs s where s.song_name like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:37
medium pred: select s.singer_name, s.country_of_origin from songs as s join song_titles as st on s.song_id = st.song_id where st.title like '%hey%'
medium gold: select name, country from singer where song_name like '%hey%'

eval_err_num:38
extra pred: select s.stadium_name, s.location from stadiums s join events e on s.stadium_id = e.stadium_id where e.year in (2014, 2015) group by s.stadium_name, s.location
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:39
extra pred: select distinct s.stadium_name, s.location from stadiums s join concerts c on s.stadium_id = c.stadium_id where c.year in (2014, 2015)
extra gold: select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2014 intersect select t2.name, t2.location from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id where t1.year = 2015

eval_err_num:40
hard pred: select count(*) as numberofconcerts from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:41
hard pred: select count(*) as concert_count from concerts where stadium_id = ( select stadium_id from stadiums order by capacity desc limit 1 )
hard gold: select count(*) from concert where stadium_id = (select stadium_id from stadium order by capacity desc limit 1)

eval_err_num:42
medium pred: select weight from dogs where age = (select min(age) from dogs)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:43
medium pred: select min(weight) from dogs where age = (select min(age) from dogs)
medium gold: select weight from pets order by pet_age limit 1

eval_err_num:44
medium pred: select pet_type, max(weight) as max_weight from pets group by pet_type
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:45
medium pred: select type, max(weight) as max_weight from pets group by type
medium gold: select max(weight), pettype from pets group by pettype

eval_err_num:46
medium pred: select count(*) as numberofpets from pets join students on pets.student_id = students.student_id where students.age > 20
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:47
medium pred: select count(*) from pets where student_id in (select id from students where age > 20)
medium gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20

eval_err_num:48
hard pred: select count(*) as numberofdogpets from pet join student on pet.student_id = student.student_id where student.sex = 'f'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:49
hard pred: select count(*) from pets join students on pets.owner_id = students.student_id join people on students.student_id = people.person_id where pets.pet_type = 'dog' and people.gender = 'female'
hard gold: select count(*) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'

eval_err_num:50
easy pred: select count(distinct pet_type) as numberofdistinctpets from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:51
easy pred: select count(distinct pet_type) from pets
easy gold: select count(distinct pettype) from pets

eval_err_num:52
extra pred: select first_name from students where pet = 'cat' or pet = 'dog' limit 1
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:53
extra pred: select first_name from people where pet = 'cat' or pet = 'dog'
extra gold: select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' or t3.pettype = 'dog'

eval_err_num:54
extra pred: select first_name from students where pet_type = 'cat' and pet_type = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:55
extra pred: select first_name from students where pet_type = 'cat' and pet_type = 'dog'
extra gold: select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog'

eval_err_num:56
extra pred: select major, age from students where pet_type != 'cat'
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:57
extra pred: select major, age from students where student_id not in (select student_id from pet_ownership where pet_type = 'cat')
extra gold: select major, age from student where stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:58
hard pred: select student_id from students where pet_id is null
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:59
hard pred: select student_id from student_course_attendance where pet_type != 'cat'
hard gold: select stuid from student except select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat'

eval_err_num:60
extra pred: select s.first_name, s.age from students as s join pets as p on s.student_id = p.student_id where p.pet_type = 'dog' and not exists ( select 1 from pets as p2 where p2.student_id = s.student_id and p2.pet_type = 'cat' )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:61
extra pred: select first_name from students join pets on students.student_id = pets.student_id where pets.pet_type = 'dog' and not exists ( select 1 from pets as p2 where p2.student_id = students.student_id and p2.pet_type = 'cat' )
extra gold: select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'dog' and t1.stuid not in (select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pettype = 'cat')

eval_err_num:62
medium pred: select type, weight from pets order by age asc limit 1
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:63
medium pred: select pet_type, weight from pets where age = (select min(age) from pets)
medium gold: select pettype, weight from pets order by pet_age limit 1

eval_err_num:64
medium pred: select id, weight from pets where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:65
medium pred: select id, weight from pet where age > 1
medium gold: select petid, weight from pets where pet_age > 1

eval_err_num:66
medium pred: select pet_type, avg(age) as average_age, max(age) as maximum_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:67
medium pred: select pet_type, avg(age) as average_age, max(age) as max_age from pets group by pet_type
medium gold: select avg(pet_age), max(pet_age), pettype from pets group by pettype

eval_err_num:68
medium pred: select pet_type, avg(weight) as average_weight from pets group by pet_type
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:69
medium pred: select pet_type, avg(weight) as average_weight from pets group by pet_type
medium gold: select avg(weight), pettype from pets group by pettype

eval_err_num:70
medium pred: select first_name, age from students where pet_owner = true
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:71
medium pred: select distinct first_name, age from students where pet_ownership = true
medium gold: select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid

eval_err_num:72
medium pred: select pet_id from pet join student on pet.student_id = student.id where student.last_name = 'smith'
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:73
medium pred: select pet_id from pets where student_id = (select student_id from students where last_name = 'smith')
medium gold: select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'

eval_err_num:74
medium pred: select student_id, count(pet_id) as numberofpets from students join pets on students.student_id = pets.student_id group by student_id
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:75
medium pred: select student_id, count(pet_id) as pet_count from students join pets on students.id = pets.student_id group by student_id
medium gold: select count(*), t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid

eval_err_num:76
medium pred: select first_name, gender from student where pet_count > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:77
medium pred: select first_name, gender from students where pet_count > 1
medium gold: select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1

eval_err_num:78
hard pred: select last_name from student join pet on student.student_id = pet.student_id where pet.type = 'cat' and pet.age = 3
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:79
hard pred: select last_name from students join pets on students.student_id = pets.student_id where pets.age = 3 and pets.type = 'cat'
hard gold: select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t3.petid = t2.petid where t3.pet_age = 3 and t3.pettype = 'cat'

eval_err_num:80
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:81
extra pred: select avg(age) from students where pet_id is null
extra gold: select avg(age) from student where stuid not in (select stuid from has_pet)

eval_err_num:82
easy pred: select count(distinct continent) from world
easy gold: select count(*) from continents

easy pred: select count(distinct continent) from continents
easy gold: select count(*) from continents

eval_err_num:83
medium pred: select continent_id, continent_name, count(country_id) as number_of_countries from continent group by continent_id, continent_name
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:84
medium pred: select continent_id, continent_name, count(distinct country_id) as number_of_countries from countries group by continent_id, continent_name
medium gold: select t1.contid, t1.continent, count(*) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid

eval_err_num:85
easy pred: select count(distinct country) from management
easy gold: select count(*) from countries

eval_err_num:86
easy pred: select count(distinct country) from management
easy gold: select count(*) from countries

eval_err_num:87
medium pred: select c.maker_full_name, c.maker_id, count(m.model_id) as number_of_models from car_maker c join model m on c.maker_id = m.maker_id group by c.maker_full_name, c.maker_id
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:88
medium pred: select car_maker_id, car_maker_name, count(model_id) as number_of_models from car_maker join model on car_maker.car_maker_id = model.car_maker_id group by car_maker_id, car_maker_name
medium gold: select t1.fullname, t1.id, count(*) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id

eval_err_num:89
hard pred: select model, min(horsepower) as min_horsepower from cars group by model order by min_horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:90
hard pred: select model from cars order by horsepower asc limit 1
hard gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower asc limit 1

eval_err_num:91
extra pred: select model from car where weight < (select avg(weight) from car)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:92
extra pred: select car_id, car_name from cars where weight < (select avg(weight) from cars)
extra gold: select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)

eval_err_num:93
extra pred: select distinct maker from cars where year = 1970
extra gold: select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.model = t3.model join cars_data as t4 on t3.makeid = t4.id where t4.year = '1970'

