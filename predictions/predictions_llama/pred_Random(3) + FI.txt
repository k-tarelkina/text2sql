select count(singer_id) from singer
select count(singer_id) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age), min(age), max(age) from singer where country = 'france'
select avg(age), min(age), max(age) from singer where country = "france"
select distinct country from singer where age > 20
select distinct country from singer where age > 20
select country, count(*) from singer group by country
select country, count(*) from singer group by country
select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t1 where t1.age = ( select min(age) from singer ) select t1.name, t1.song_name from singer as t
select distinct t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id where t1.age > ( select avg(age) from singer ) select distinct t1.official_name from city as t1 intersect select distinct t1.official_name from city as t1 where t1.population > 1500 intersect select distinct t1.official_name from city as t1 where t1.population < 500 select name, born_state, age from head order by age
select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t
select location, name from stadium where capacity between 5000 and 10000
select location, name from stadium where capacity between 5000 and 10000
select max(capacity), avg(average) from stadium
select avg(capacity), max(capacity) from stadium
select name, capacity from stadium order by average desc limit 1
select name, capacity from stadium order by average desc limit 1
select count(concert_id) from concert where year = '2014' or year = '2015'
select count(*) from concert where year = '2014' or year = '2015'
select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select song_name from singer where age > ( select avg(age) from singer ) select
select name, count(concert_id) from concert group by stadium_id
select t1.stadium_id, count(t2.concert_id) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.stadium_id
select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2014' group by t1.stadium_id order by count(*) desc limit 1
select t1.name, t1.capacity from stadium t1 join concert t2 on t1.stadium_id = t2.stadium_id where t2.year > 2013 group by t1.stadium_id order by count(*) desc limit 1
select year from concert group by year order by count(concert_id) desc limit 1
select year from concert group by year order by count(year) desc limit 1
select t1.name from stadium as t1 where t1.stadium_id not in ( select t2.stadium_id from concert as t2 )
select country from singer where age > 40 intersect select country from singer where age < 30
select t1.name from stadium as t1 where t1.stadium_id not in ( select t3.stadium_id from concert as t2 join singer_in_concert as t3 on t2.concert_id = t3.concert_id where t2.year = 2014 )
select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
select name, theme, count(singer_id) from concert group by concert_id
select t1.concert_name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_name, t1.theme
select name, count(concert_id) from singer_in_concert group by singer_id
select t1.name from stadium as t1 where t1.stadium_id not in (select stadium_id from concert) select t1.name from stadium as t1 where t1.stadium_id not in (select stadium_id from concert) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id not in ( select stadium_id from concert ) select t1.name from stadium as t1 where t1.stadium_id
select t1.name, count(t2.concert_id) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name
select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t3.year = '2014'
select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id where t1.year = '2014'
select name, country from singer where song_name like '%hey%'
select name, country from singer where song_name like '%hey%'
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2014' intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2015'
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2014' intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2015'
select count(concert_id) from concert where stadium_id in (select stadium_id from stadium order by capacity desc limit 1)
select count(t1.concert_id) from concert as t1 join stadium as t2 on t1.stadium_id = t2.stadium_id order by t2.capacity desc limit 1
select count(*) from pets where weight > 10
select count(*) from pets where weight > 10
select weight from pets where pet_age = ( select min(pet_age) from pets where pettype = 'dog' )
select weight from pets where pet_age = (select min(pet_age) from pets where pettype = 'dog')
select t1.pet_type, max(t1.weight) from pets as t1 group by t1.pet_type
select pettype, max(weight) from pets group by pettype
select count(*) from student where age > 20
select count(*) from pets where pet_age > 20
select count(*) from pets where pettype = 'dog' and stuid in (select stuid from student where sex = 'f')
select count(*) from pets where pettype = "dog" and (select sex from student where stuid in (select stuid from has_pet)) = "f"
select count(distinct pettype) from pets
select count(distinct pettype) from pets
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in (select petid from pets where pettype in ('cat', 'dog'))
select fname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype = "cat" or pettype = "dog" ) )
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "dog"
select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid is null and t2.petid not in ( select petid from pets where pettype = 'cat' )
select stuid from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat'))
select stuid from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on
select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' ) and t2.petid not in ( select petid from pets where pettype = 'cat' )
select t1.major, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid not in ( select petid from pets where pettype = 'cat' ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1.stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) ) select t1.major, t1.age from student as t1 where t1
select fname from student where stuid in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'dog' ) ) and stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
select pettype, weight from pets order by pet_age limit 1
select pettype, weight from pets order by pet_age asc limit 1
select petid, weight from pets where pet_age > 1
select petid, weight from pets where pet_age > 1
select avg(pet_age), max(pet_age), pettype from pets group by pettype
select avg(pet_age), max(pet_age) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select t2.fname, t2.age from has_pet as t1 join student as t2 on t1.stuid = t2.stuid
select distinct fname, age from student where stuid in (select stuid from has_pet)
select petid from has_pet where stuid in ( select stuid from student where lname = 'smith' )
select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'
select stuid, count(petid) from has_pet group by stuid
select count(*) from farm select stuid from has_pet group by stuid
select fname, sex from student where stuid in ( select stuid from has_pet group by stuid having count(*) > 1 )
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3 and t3.pettype = 'cat'
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3
select avg(age) from student where stuid not in (select stuid from has_pet)
select avg(age) from student where stuid not in (select stuid from has_pet)
select count(*) from continents
select count(distinct continent) from continents
select contid, continent, count(countryid) from countries group by continent
select contid, continent, count(countryid) from countries group by continent
select count(countryname) from countries
select count(*) from countries
select t1.maker, t1.id, count(t2.model) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id
select id, fullname, count(*) from car_makers group by id
select model from model_list where id in (select maker from car_makers order by horsepower asc limit 1)
select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model where t2.horsepower = (select min(horsepower) from car_names)
select model from model_list where makeid in ( select id from car_names where weight < ( select avg(weight) from car_names ) )
select t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker where t2.model in ( select model from model_list where year in ( select year from cars_data where year = 1970 ) )
select t1.model from model_list as t1 join cars_data as t2 on t1.modelid = t2.id where t2.weight < ( select avg(weight) from cars_data ) select t1.model from model_list as t1 join cars_data as t2 on t1.modelid = t2.id where t2.weight < ( select cast(sum(t2.weight) as real) / count(t2.id) from cars_data as t2 join model_list as t1 on t2.id = t1.modelid ) select t1.model from model_list as t1 join cars_data as t2 on t1.modelid = t2.id where t2.weight < ( select avg(weight) from cars_data ) select t1.model from model_list as t1 join cars_data as t2 on t1.modelid = t2.id where t2.weight < ( select cast(sum(t2.weight) as real) / count(t2.id) from cars_data as t2 join model_list as t1 on t2.id = t1.modelid )
