select count(singer_id) from singer
select count(*) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age), min(age), max(age) from singer where country = 'france'
select avg(age), min(age), max(age) from singer where country = 'france'
select name, song_release_year from singer order by age limit 1
select distinct country from singer where age > 20
select distinct country from singer where age > 20
select t1.country, count(*) from singer as t1 group by t1.country
select country, count(*) from singer group by country
select song_name from singer where age > (select avg(age) from singer)
select t2.song_name from singer as t1 join singer as t2 on t1.age > t2.age join singer_in_concert as t3 on t2.singer_id = t3.singer_id
select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t1 where t1.age = (select min(age) from singer) select t1.name, t1.song_name from singer as t
select location, name from stadium where capacity between 5000 and 10000
select location, name from stadium where capacity between 5000 and 10000
select max(capacity), avg(average) from stadium
select avg(capacity), max(capacity) from stadium
select t1.name, t1.capacity from stadium as t1 order by t1.average desc limit 1
select count(*) from concert where year = "2014" or year = "2015"
select count(concert_id) from concert where year = '2014' or year = '2015'
select t1.name, count(*) from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name
select count(*) from concert
select t1.name, t1.capacity from stadium as t1 join ( select stadium_id, count(*) from concert where year >= '2014' group by stadium_id ) as t2 on t1.stadium_id = t2.stadium_id order by t2.count(*) desc limit 1
select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > 2013 order by count(*) desc limit 1 )
select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1 where t1.average = ( select max(average) from stadium ) select t1.name, t1.capacity from stadium as t1
select year from concert group by year order by count(year) desc limit 1
select year from concert group by year order by count(*) desc limit 1
select name from stadium where stadium_id not in (select stadium_id from concert)
select name from stadium where stadium_id not in ( select stadium_id from concert )
select country from singer where age > 40 select country from singer where age < 30
select t1.name from stadium as t1 where t1.stadium_id not in ( select t2.stadium_id from concert as t2 where t2.year = '2014' )
select name from stadium where stadium_id not in ( select stadium_id from concert where year = 2014 )
select t1.concert_name, t1.theme, count(*) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_name
select t1.concert_name, t1.theme, count(t2.singer_id) from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id
select t1.name, count(t2.concert_id) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name
select t1.name, count(t2.concert_id) from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t1.name
select t1.name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t3.year = "2014"
select t2.name from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id where t1.year = "2014"
select t1.name, t1.country from singer as t1 where t1.song_name like '%hey%' select t1.name, t1.country from singer as t1 where t1.song_name like '%hey%'
select t1.name, t1.country from singer as t1 where t1.song_name like '%hey%' select t1.name, t1.country from singer as t1 where t1.song_name like '%hey%'
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2014 intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = 2015
select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2014' intersect select t1.name, t1.location from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2015'
select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) from pets where weight > 10
select count(*) from pets where weight > 10
select weight from pets where pettype = 'dog' order by pet_age limit 1
select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 ) select t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id having count(*) > 1 select candidate_id from candidate_assessments order by assessment_date desc limit 1 select count(*) from department where department_id not in (select department_id from management) select t1.official_name from city as t1 join farm_competition as t2 on t1.city_id = t2.host_city_id group by t2.host_city_id having count(*) > 1 select count(*) from concert where stadium_id in ( select stadium_id from stadium order by capacity desc limit 1 )
select weight from pets where pet_age = (select min(pet_age) from pets where pettype = 'dog')
select max(weight), pettype from pets group by pettype
select t1.pet_type, max(t1.weight) from pets as t1 group by t1.pet_type
select count(t2.petid) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.age > 20
select count(*) from student where age > 20 intersect select count(*) from has_pet
select count(*) from pets where pettype = 'dog' and stuid in ( select stuid from student where sex = 'f' )
select count(t2.petid) from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t1.sex = 'f' and t3.pettype = 'dog'
select count(distinct pettype) from pets
select count(distinct pettype) from pets
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in (select petid from pets where pettype = "cat" or pettype = "dog")
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' or t3.pettype = 'dog' select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype in ('cat', 'dog') select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' or t3.pettype = 'dog'
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog'
select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid is null
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "dog" select max(budget_in_billions), min(budget_in_billions) from department select t3.cell_mobile_number from candidates as t1 join candidate_assessments as t2 on t1.candidate_id = t2.candidate_id join people as t3 on t1.candidate_id = t3.person_id where t2.asessment_outcome_code = "fail" select candidate_id from candidate_assessments order by assessment_date desc limit 1 select student_id from student_course_registrations group by student_id order by count(*) limit 1 select official_name from city where population > 1500 or population < 500 select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "cat" intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = "dog"
select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid is null and t2.petid not in ( select petid from pets where pettype = "cat" )
select stuid from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
select stuid from student except select stuid from has_pet where pettype = 'cat'
select t1.fname, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid is null
select pettype, weight from pets where pet_age = (select min(pet_age) from pets)
select t2.pettype, t2.weight from pets as t2 where t2.pet_age = (select min(pet_age) from pets)
select petid, weight from pets where pet_age > 1
select petid, weight from pets where pet_age > 1
select avg(pet_age), max(pet_age), pettype from pets group by pettype
select avg(pet_age), max(pet_age) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' ) and t2.petid not in ( select petid from pets where pettype = 'cat' ) select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' except select petid from pets where pettype = 'cat' ) select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' intersect select petid from pets where pettype = 'cat' ) select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'cat' ) select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'cat' ) select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid in ( select petid from pets where pettype = 'dog' ) intersect select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t2.petid
select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid
select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid
select t1.stuid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = 'smith'
select t2.petid from student as t1 join has_pet as t2 on t1.stuid = t2.stuid where t1.lname = "smith"
select count(*), t1.stuid from has_pet as t1 join pets as t2 on t1.petid = t2.petid group by t1.stuid
select count(distinct stuid) from has_pet
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(*) > 1
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3
select avg(age) from student where stuid not in (select stuid from has_pet)
select avg(age) from student where stuid not in (select stuid from has_pet)
select count(*) from continents
select count(*) from continents
select t1.contid, t1.continent, count(t2.countryid) from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid
select contid, continent, count(countryid) from countries group by continent
select count(*) from countries
select count(*) from countries
select t1.fullname, t1.id, count(t2.model) from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id
select id, fullname, count(*) from car_makers group by id
select model from model_list where horsepower = ( select min(horsepower ) from cars_data )
select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model order by t2.horsepower limit 1
select model from model_list where id in ( select maker from car_makers where country in ( select country from countries where continent in ( select id from continents where continent = 'asia' ) ) )
select t1.model from model_list as t1 join car_names as t2 on t1.model = t2.model join cars_data as t3 on t2.makeid = t3.id where t3.weight < ( select avg(weight) from cars_data )
select t1.maker from car_makers as t1 join car_names as t2 on t1.id = t2.makeid join cars_data as t3 on t2.makeid = t3.id where t3.year = 1970 group by t1.maker
