select count(*) from singer
select count(*) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age), min(age), max(age) from singer where country = 'france'
select avg(age), min(age), max(age) from singer where country = 'french'
select name, song_release_year from singer where age = (select min(age) from singer)
select name, song_release_year from singer where age = (select min(age) from singer)
distinct country from singer where age > 20
distinct country from singer where age > 20
select country, count(*) as number_of_singers from singer group by country
select country, count(*) as number_of_singers from singer group by country
select song_name from singer where age > (select avg(age) from singer)
song_name from singer where age > (select avg(age) from singer)
location, name from stadium where capacity between 5000 and 10000
location, name from stadium where capacity between 5000 and 10000
max(capacity), avg(capacity) from stadium
select avg(capacity), max(capacity) from stadium
name, capacity from stadium order by average desc limit 1
name, capacity from stadium order by average desc limit 1
select count(*) from concert where year in ('2014', '2015')
select count(*) from concert where year in ('2014', '2015')
select name, count(*) as numberofconcerts from concert group by stadium_id
select count(*) as concert_count from concert group by stadium_id
select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year >= 2014 group by stadium_id order by count(*) desc limit 1 )
select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > 2013 ) group by stadium_id order by count(*) desc limit 1
select year, count(*) as numberofconcerts from concert group by year order by numberofconcerts desc limit 1
select year, count(*) as numberofconcerts from concert group by year order by numberofconcerts desc limit 1
name from stadium where stadium_id not in (select stadium_id from concert)
distinct t1.location from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_id is null
select country from singer where age > 40 intersect select country from singer where age < 30
name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
distinct location from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
select concert.concert_name, concert.theme, count(singer_in_concert.singer_id) as numberofsingers from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.concert_name, concert.theme
t1.name, t2.theme, count(t3.singer_id) as number_of_singers from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id join singer as t3 on t2.singer_id = t3.singer_id group by t1.concert_id, t1.theme, t1.concert_name
select s.name, count(c.concert_id) as numberofconcerts from singer s join singer_in_concert sic on s.singer_id = sic.singer_id join concert c on sic.concert_id = c.concert_id group by s.name
select singer.name, count(singer_in_concert.concert_id) as number_of_concerts from singer join singer_in_concert on singer.singer_id = singer_in_concert.singer_id group by singer.name
select name from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = '2014'
select name from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = '2014'
t1.name, t2.country from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t1.song_name like '%hey%'
select distinct t1.location, t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
name, country from singer where song_name like '%hey%' given the following database schema: create table department ( department_id number primary key name text creation text ranking number budget_in_billions number num_employees number ) create table head ( head_id number primary key name text born_state text age number ) create table management ( department_id number primary key foreign key (department_id) references department(department_id) head_id number foreign key (head_id) references head(head_id) temporary_acting text ) answer the following: what are the names of the departments that have more than 100 employees? select name from department where num_employees > 100
t1.location, t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year = '2014' and t2.year = '2015'
select count(*) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) from has_pet join pets on has_pet.petid = pets.petid where pets.weight > 10
select count(*) from pets where weight > 10
weight from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog')
select weight from pets where pet_age = (select min(pet_age) from pets where pet_type = 'dog')
select pettype, max(weight) from pets group by pettype
select t1.pettype, max(t2.weight) as maxweight from pets as t1 join has_pet as t2 on t1.petid = t2.petid group by t1.pettype
select count(*) from has_pet join student on has_pet.stuid = student.stuid where student.age > 20
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.age > 20
select count(*) from has_pet join pets on has_pet.petid = pets.petid join student on has_pet.stuid = student.stuid where student.sex = 'f' and pets.pettype = 'dog'
select count(distinct pettype) from pets
select count(*) from has_pet join pets on has_pet.petid = pets.petid join student on has_pet.stuid = student.stuid where pets.pettype = 'dog' and student.sex = 'female'
select distinct pettype from pets
fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype in ('cat', 'dog')
t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype in ('cat', 'dog')
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.petid in ( select petid from pets where pettype = 'dog' )
select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.petid in ( select petid from pets where pettype = 'dog' )
select major, age from student where stuid not in (select stuid from has_pet where pettype = 'cat')
select distinct t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.petid is null or t2.pettype != 'cat'
stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
fname, age from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' and not exists ( select 1 from has_pet hp2 join pets p2 on hp2.petid = p2.petid where hp2.stuid = student.stuid and p2.pettype = 'cat' )
select distinct t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' and not exists ( select 1 from has_pet as t4 join pets as t5 on t4.petid = t5.petid where t5.pettype = 'cat' and t4.stuid = t1.stuid )
pettype, weight from pets as t1 join has_pet as t2 on t1.petid = t2.petid where t1.pet_age = (select min(pet_age) from pets)
select pettype, weight from pets order by pet_age asc limit 1
petid, weight from pets where pet_age > 1
petid, weight from pets where pet_age > 1
select pettype, avg(pet_age) as averageage, max(pet_age) as maxage from pets group by pettype
select pettype, avg(pet_age) as average_age, max(pet_age) as max_age from pets group by pettype
select pettype, avg(weight) from pets group by pettype
pettype, avg(weight) from pets group by pettype
fname, age from student join has_pet on student.stuid = has_pet.stuid
select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid
select t1.petid from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.lname = 'smith'
select t1.petid from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.lname = 'smith'
select student.stuid, count(has_pet.petid) as petcount from student join has_pet on student.stuid = has_pet.stuid group by student.stuid
select stuid, count(*) as pet_count from has_pet group by stuid
fname, sex from student where stuid in (select stuid from has_pet group by stuid having count(*) > 1)
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(t2.petid) > 1
lname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pet_age = 3 and p.pettype = 'cat'
lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.pet_age = 3
select avg(age) from student where stuid not in (select stuid from has_pet)
select avg(age) from student where stuid not in (select stuid from has_pet)
select count(distinct continent) from continents
select count(distinct continent) from continents
select contid, continent, count(countryid) as numberofcountries from countries group by contid, continent
select count(*) from countries
select t1.contid, t1.continent, count(t2.countryid) as numberofcountries from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
select count(distinct countryid) from countries
select t1.fullname, t1.id, count(t2.modelid) as numberofmodels from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.fullname, t1.id
t1.id, t1.fullname, count(t2.modelid) as numberofmodels from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id, t1.fullname
select model from car_names join model_list on car_names.model = model_list.model join car_makers on model_list.maker = car_makers.id order by horsepower limit 1
select model from car_names order by horsepower limit 1
select model from car_names where weight < (select avg(weight) from cars_data)
select model from car_names where weight < (select avg(weight) from cars_data)
select distinct t1.maker from cars_data as t1 join car_names as t2 on t1.makeid = t2.makeid where t1.year = 1970
