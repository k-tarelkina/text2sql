select count(*) from singer
select count(*) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age), min(age), max(age) from singer where country = 'france'
select avg(age), min(age), max(age) from singer where country = 'france'
select t1.song_name, t1.song_release_year from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id order by t1.age asc limit 1
select s.song_name, s.song_release_year from singer s join singer_in_concert sic on s.singer_id = sic.singer_id join concert c on sic.concert_id = c.concert_id where s.age = (select min(age) from singer)
select country from singer where age > 20
select distinct t1.country from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t1.age > 20
select country, count(*) as number_of_singers from singer group by country
select country, count(*) as number_of_singers from singer group by country
select distinct song_name from singer where age > (select avg(age) from singer)
select song_name from singer where age > (select avg(age) from singer)
select location, name from stadium where capacity between 5000 and 10000
select location, name from stadium where capacity between 5000 and 10000
select max(capacity) as max_capacity, avg(capacity) as average_capacity from stadium
select avg(capacity) as average_capacity, max(capacity) as maximum_capacity from stadium
select name, capacity from stadium order by average desc limit 1
select name, capacity from stadium order by average desc limit 1
select count(*) from concert where year in ('2014', '2015')
select count(*) from concert where year in ('2014', '2015')
select name, count(concert_id) as number_of_concerts from concert group by stadium_id
select stadium.location, count(concert.concert_id) as concert_count from stadium join concert on stadium.stadium_id = concert.stadium_id group by stadium.location
select name, capacity from stadium join concert on stadium.stadium_id = concert.stadium_id where year >= 2014 group by name, capacity order by count(*) desc limit 1
select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > 2013 group by stadium_id having count(*) = ( select max(count(stadium_id)) from concert where year > 2013 group by stadium_id ) )
select year, count(*) as concert_count from concert group by year order by concert_count desc limit 1
select year from concert group by year order by count(*) desc limit 1
select name from stadium where stadium_id not in (select stadium_id from concert)
select stadium_id, name from stadium where stadium_id not in (select stadium_id from concert)
select distinct country from singer where age > 40 or age < 30
select name from stadium where stadium_id not in ( select stadium_id from concert where year = '2014' )
select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
select c.concert_name, c.theme, count(si.singer_id) as number_of_singers from concert c join singer_in_concert si on c.concert_id = si.concert_id group by c.concert_name, c.theme
select concert.name, concert.theme, count(singer_in_concert.singer_id) as numberofsingers from concert join singer_in_concert on concert.concert_id = singer_in_concert.concert_id group by concert.name, concert.theme
select name, count(concert_id) as number_of_concerts from singer_in_concert group by name
select s.name, count(c.concert_id) as number_of_concerts from singer s join singer_in_concert sic on s.singer_id = sic.singer_id join concert c on sic.concert_id = c.concert_id group by s.name
select name from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = '2014'
select name from singer_in_concert join concert on singer_in_concert.concert_id = concert.concert_id where concert.year = '2014'
select name, country from singer where song_name like '%hey%'
select distinct t1.location, t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
select distinct name, location from stadium where stadium_id in ( select distinct stadium_id from concert where year in ('2014', '2015') )
select count(*) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) as number_of_concerts from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) from pets where weight > 10
select count(*) from pets where weight > 10
select weight from pets where pettype = 'dog' and pet_age = (select min(pet_age) from pets where pettype = 'dog')
select name, country from singer where song_name like '%hey%' given the following database schema: create table addresses ( address_id number primary key line_1 text line_2 text city text zip_postcode text state_province_county text country text ) create table people ( person_id number primary key first_name text middle_name text last_name text cell_mobile_number text email_address text login_name text password text ) create table students ( student_id number primary key foreign key (student_id) references people(person_id) student_details text ) create table courses ( course_id text primary key course_name text course_description text other_details text ) create table people_addresses ( person_address_id number primary key person_id number foreign key (person_id) references people(person_id) address_id number foreign key (address_id) references addresses(address_id) date_from time date_to time ) create table student_course_registrations ( student_id number primary key foreign key (student_id) references students(student_id) course_id number foreign key (course_id) references courses(course_id) registration_date time ) create table student_course_attendance ( student_id number primary key foreign key (student_id) references student_course_registrations(student_id) course_id number foreign key (course_id) references student_course_registrations(course_id) date_of_attendance time ) create table candidates ( candidate_id number primary key foreign key (candidate_id) references people(person_id) candidate_details text ) create table candidate_assessments ( candidate_id number primary key foreign key (candidate_id) references candidates(candidate_id) qualification text assessment_date time asessment_outcome_code text ) answer the following: what are the names of the courses in alphabetical order? select course_name from courses order by course_name
select weight from pets as t1 join has_pet as t2 on t1.petid = t2.petid where t1.pettype = "dog" and t2.stuid = (select stuid from student order by age asc limit 1)
select pettype, max(weight) as max_weight from pets group by pettype
select pettype, max(weight) as max_weight from pets group by pettype
select count(*) from has_pet join student on has_pet.stuid = student.stuid where student.age > 20
select count(*) from has_pet join student on has_pet.stuid = student.stuid where student.age > 20
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.sex = 'f' and pets.pettype = 'dog'
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.sex = 'female' and pets.pettype = 'dog'
select distinct pettype from pets
select distinct pettype from pets
select fname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype in ('cat', 'dog')
select fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype in ('cat', 'dog')
select fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' and pets.petid in ( select petid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' )
select distinct fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pettype = 'cat' and pettype = 'dog'
select major, age from student where stuid not in ( select stuid from has_pet where petid in ( select petid from pets where pettype = 'cat' ) )
select s.major, s.age from student s left join has_pet hp on s.stuid = hp.stuid left join pets p on hp.petid = p.petid where p.pettype != 'cat'
select stuid from student where stuid not in (select stuid from has_pet where petid in (select petid from pets where pettype = 'cat'))
select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
select fname, age from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pettype = 'dog' and not exists (select 1 from has_pet as hp2 join pets as p2 on hp2.stuid = s.stuid and hp2.petid = p2.petid and p2.pettype = 'cat')
select fname from student join has_pet on student.stuid = has_pet.stuid join pets on has_pet.petid = pets.petid where pets.pettype = 'dog' and not exists ( select 1 from has_pet as hp2 join pets as p2 on hp2.petid = p2.petid where hp2.stuid = student.stuid and p2.pettype = 'cat' )
select pettype, weight from pets order by pet_age asc limit 1
select pettype, weight from pets order by pet_age asc limit 1
select petid, weight from pets where pet_age > 1
select petid, weight from pets where pet_age > 1
select pettype, avg(pet_age) as averageage, max(pet_age) as maxage from pets group by pettype
select pettype, avg(pet_age) as averageage, max(pet_age) as maxage from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select pettype, avg(weight) from pets group by pettype
select fname, age from student join has_pet on student.stuid = has_pet.stuid
select distinct fname, age from student join has_pet on student.stuid = has_pet.stuid
select petid from has_pet join student on has_pet.stuid = student.stuid where lname = 'smith'
select t1.petid from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.lname = 'smith'
select s.stuid, count(p.petid) as petcount from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid group by s.stuid
select stuid, count(*) as petcount from has_pet group by stuid
select fname, sex from student as s join has_pet as hp on s.stuid = hp.stuid group by s.fname, s.sex having count(hp.petid) > 1
select fname, sex from student join has_pet on student.stuid = has_pet.stuid group by student.stuid having count(has_pet.petid) > 1
select lname from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where p.pet_age = 3 and p.pettype = 'cat'
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3 and t3.pettype = 'cat'
select avg(age) from student where stuid not in (select stuid from has_pet)
select avg(age) from student where stuid not in (select stuid from has_pet)
select count(distinct continent) from continents
select count(*) from continents
select contid, continent, count(countryid) as numberofcountries from countries group by contid, continent
select t1.contid, t1.continent, count(t2.countryid) as numberofcountries from continents as t1 left join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
select count(distinct countryid) from countries
select count(distinct countryid) from countries
select c.fullname, c.id, count(m.modelid) as numberofmodels from car_makers c join model_list m on c.id = m.maker group by c.fullname, c.id
select c.fullname, c.id, count(m.modelid) as numberofmodels from car_makers c join model_list m on c.id = m.maker group by c.fullname, c.id
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id order by t2.horsepower limit 1
select model from car_names order by horsepower limit 1
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)
select model from car_names where weight < (select avg(weight) from cars_data)
select distinct c.fullname from car_makers c join car_names cn on c.id = cn.makeid join cars_data cd on cn.modelid = cd.id where cd.year = 1970
