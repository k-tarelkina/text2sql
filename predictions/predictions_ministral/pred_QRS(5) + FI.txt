select count(distinct singer_id) from singer
select count(*) from singer
select name, country, age from singer order by age desc
select name, country, age from singer order by age desc
select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singer where country = 'france'
select avg(age) as average_age, min(age) as minimum_age, max(age) as maximum_age from singer where country = 'france'
select s.name, s.song_release_year from singer as s order by s.age asc limit 1
select distinct country from singer where age > 20
select distinct country from singer where age > 20
select t2.song_name, t2.song_release_year from singer as t1 join singer_in_concert as t3 on t1.singer_id = t3.singer_id join concert as t4 on t3.concert_id = t4.concert_id join singer as t2 on t1.singer_id = t2.singer_id where t1.age = (select min(age) from singer)
select country, count(*) as numberofsingers from singer group by country
select t2.country, count(*) as numberofsingers from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id group by t2.country
select t1.song_name from singer as t1 join singer_in_concert as t2 on t1.singer_id = t2.singer_id join concert as t3 on t2.concert_id = t3.concert_id where t1.age > (select avg(age) from singer)
select s.song_name from singer s join singer_in_concert sic on s.singer_id = sic.singer_id join concert c on sic.concert_id = c.concert_id join stadium st on c.stadium_id = st.stadium_id where s.age > (select avg(age) from singer)
select location, name from stadium where capacity between 5000 and 10000
select location, name from stadium where capacity between 5000 and 10000
select max(capacity), avg(capacity) from stadium
select avg(capacity) as average_capacity, max(capacity) as max_capacity from stadium
select name, capacity from stadium order by average desc limit 1
select name, capacity from stadium order by average desc limit 1
select count(*) from concert where year in ('2014', '2015')
select count(*) from concert where year in ('2014', '2015')
select stadium_id, count(*) as concert_count from concert group by stadium_id
select t1.name, count(*) as numberofconcerts from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id group by t1.name
select t1.name, t1.capacity from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year >= 2014 group by t1.name, t1.capacity order by count(*) desc limit 1
select name, capacity from stadium where stadium_id in ( select stadium_id from concert where year > '2013' group by stadium_id order by count(*) desc limit 1 )
select year from concert group by year order by count(*) desc limit 1
select year from concert group by year order by count(*) desc limit 1
select distinct name from stadium where stadium_id not in ( select stadium_id from concert )
select distinct t1.name from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.concert_id is null
select name from stadium where stadium_id not in (select stadium_id from concert where year = '2014')
select distinct t1.location, t1.name from stadium as t1 left join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year != '2014'
select distinct t2.country from singer as t1 join singer_in_concert as t3 on t1.singer_id = t3.singer_id join concert as t4 on t3.concert_id = t4.concert_id join stadium as t5 on t4.stadium_id = t5.stadium_id join singer as t2 on t1.singer_id = t2.singer_id where t1.age > 40 and t2.age < 30
select t1.concert_name, t1.theme, count(t2.singer_id) as numberofsingers from concert as t1 join singer_in_concert as t2 on t1.concert_id = t2.concert_id group by t1.concert_id, t1.concert_name, t1.theme
select c.concert_name, c.theme, count(si.singer_id) as number_of_singers from concert as c join singer_in_concert as si on c.concert_id = si.concert_id group by c.concert_name, c.theme
select s.name, count(c.concert_id) as numberofconcerts from singer_in_concert as sc join singer as s on sc.singer_id = s.singer_id join concert as c on sc.concert_id = c.concert_id group by s.name
select s.name, count(c.concert_id) as numberofconcerts from singer_in_concert as sc join singer as s on sc.singer_id = s.singer_id join concert as c on sc.concert_id = c.concert_id group by s.name
select t1.name from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id where t2.year = '2014'
select name, country from singer where song_name like '%hey%'
select distinct t1.name from singer_in_concert as t1 join concert as t2 on t1.concert_id = t2.concert_id where t2.year = '2014'
select name, country from singer where song_name like '%hey%'
select distinct t1.location, t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
select distinct t1.location, t1.name from stadium as t1 join concert as t2 on t1.stadium_id = t2.stadium_id where t2.year in ('2014', '2015')
select count(*) from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) as concert_count from concert where stadium_id = ( select stadium_id from stadium order by capacity desc limit 1 )
select count(*) from pets where weight > 10
select count(*) from pets where weight > 10
select weight from pets where pet_age = (select min(pet_age) from pets where pet_type = 'dog')
select pettype, max(weight) as max_weight from pets group by pettype
select t1.weight from pets as t1 join has_pet as t2 on t1.petid = t2.petid join student as t3 on t2.stuid = t3.stuid where t1.pettype = 'dog' and t3.age = (select min(age) from student)
select pettype, max(weight) as max_weight from pets group by pettype
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.age > 20
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.age > 20
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.sex = 'f' and pets.pettype = 'dog'
select distinct pettype from pets
select distinct pettype from pets
select count(*) from has_pet join student on has_pet.stuid = student.stuid join pets on has_pet.petid = pets.petid where student.sex = 'female' and pets.pettype = 'dog'
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype in ('cat', 'dog')
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype in ('cat', 'dog')
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.petid in ( select petid from pets where pettype = 'dog' )
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.petid in ( select petid from pets where pettype = 'dog' )
select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid left join pets as t3 on t2.petid = t3.petid where t3.pettype != 'cat'
select t1.major, t1.age from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid left join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.petid is null
select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
select stuid from student where stuid not in (select stuid from has_pet where pettype = 'cat')
select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' and t3.petid not in ( select petid from has_pet join pets on has_pet.petid = pets.petid where pets.pettype = 'cat' )
select t1.pettype, t1.weight from pets as t1 join has_pet as t2 on t1.petid = t2.petid where t1.pet_age = (select min(pet_age) from pets)
select t1.fname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'dog' and not exists ( select 1 from has_pet as t4 join pets as t5 on t4.petid = t5.petid where t5.pettype = 'cat' and t4.stuid = t1.stuid )
select t2.pettype, t2.weight from pets as t2 join has_pet as t1 on t2.petid = t1.petid where t2.pet_age = (select min(pet_age) from pets)
select t2.petid, t2.weight from pets as t2 join has_pet as t1 on t1.petid = t2.petid where t2.pet_age > 1
select t1.petid, t1.weight from pets as t1 join has_pet as t2 on t1.petid = t2.petid where t1.pet_age > 1
select pettype, avg(pet_age) as average_age, max(pet_age) as max_age from pets group by pettype
select pettype, avg(pet_age) as average_age, max(pet_age) as max_age from pets group by pettype
select pettype, avg(weight) as average_weight from pets group by pettype
select pettype, avg(weight) as average_weight from pets group by pettype
select t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid
select distinct t1.fname, t1.age from student as t1 join has_pet as t2 on t1.stuid = t2.stuid
select t1.petid from has_pet as t1 join student as t2 on t1.stuid = t2.stuid where t2.lname = 'smith'
select p.petid from student as s join has_pet as hp on s.stuid = hp.stuid join pets as p on hp.petid = p.petid where s.lname = 'smith'
select t1.stuid, count(*) as petcount from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid
select t1.stuid, count(*) as pet_count from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid
select s.fname, s.sex from student as s join has_pet as hp on s.stuid = hp.stuid group by s.stuid having count(hp.petid) > 1
select t1.fname, t1.sex from student as t1 join has_pet as t2 on t1.stuid = t2.stuid group by t1.stuid having count(t2.petid) > 1
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pet_age = 3 and t3.pettype = 'cat'
select t1.lname from student as t1 join has_pet as t2 on t1.stuid = t2.stuid join pets as t3 on t2.petid = t3.petid where t3.pettype = 'cat' and t3.pet_age = 3
select avg(student.age) from student left join has_pet on student.stuid = has_pet.stuid where has_pet.stuid is null
select count(distinct continent) from continents
select count(distinct continent) from continents
select avg(t1.age) from student as t1 left join has_pet as t2 on t1.stuid = t2.stuid where t2.stuid is null
select t1.contid, t1.continent, count(t2.countryid) as numberofcountries from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
select count(distinct countryid) from countries
select count(distinct countryid) from countries
select t1.contid, t1.continent, count(t2.countryid) as numberofcountries from continents as t1 join countries as t2 on t1.contid = t2.continent group by t1.contid, t1.continent
select t1.fullname, t1.id, count(t2.modelid) as numberofmodels from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.fullname, t1.id
select model from car_names join cars_data on car_names.makeid = cars_data.id order by horsepower limit 1
select t1.id as makerid, t1.fullname as makerfullname, count(t2.modelid) as numberofmodels from car_makers as t1 join model_list as t2 on t1.id = t2.maker group by t1.id, t1.fullname
select model from car_names join cars_data on car_names.makeid = cars_data.id order by horsepower asc limit 1
select model from car_names where id in ( select id from cars_data where weight < (select avg(weight) from cars_data) )
select t1.model from car_names as t1 join cars_data as t2 on t1.makeid = t2.id where t2.weight < (select avg(weight) from cars_data)
select distinct t1.maker from car_makers as t1 join model_list as t2 on t1.id = t2.maker join car_names as t3 on t2.modelid = t3.modelid join cars_data as t4 on t3.makeid = t4.id where t4.year = 1970
